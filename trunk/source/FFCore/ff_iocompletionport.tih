struct CFFIoCompletionPort
{
    FFLPVoid m_hCompletionPort;
};
// ??0CFFIoCompletionPort@@QAE@XZ public: __thiscall CFFIoCompletionPort::CFFIoCompletionPort(void)
CFFIoCompletionPort * __thiscall __0CFFIoCompletionPort__QAE_XZ( CFFIoCompletionPort * );
// ??1CFFIoCompletionPort@@QAE@XZ public: __thiscall CFFIoCompletionPort::~CFFIoCompletionPort(void)
void __thiscall __1CFFIoCompletionPort__QAE_XZ( CFFIoCompletionPort * );
// ??4CFFIoCompletionPort@@QAEAAV0@ABV0@@Z public: CFFIoCompletionPort & __thiscall CFFIoCompletionPort::operator=(CFFIoCompletionPort const &)
CFFIoCompletionPort * __thiscall __4CFFIoCompletionPort__QAEAAV0_ABV0__Z( CFFIoCompletionPort *, CFFIoCompletionPort const * );
// ?Close@CFFIoCompletionPort@@QAE_NXZ public: bool __thiscall CFFIoCompletionPort::Close(void)
FFBool __thiscall _Close_CFFIoCompletionPort__QAE_NXZ( CFFIoCompletionPort * );
// ?Create@CFFIoCompletionPort@@QAE_NPAX0K@Z public: bool __thiscall CFFIoCompletionPort::Create(void *,void *,unsigned long)
FFBool __thiscall _Create_CFFIoCompletionPort__QAE_NPAX0K_Z( CFFIoCompletionPort *, FFLPVoid, FFLPVoid, FFU32 );
// ?GetQueuedStatus@CFFIoCompletionPort@@QBE_NAAKPAPAXPAPAU_OVERLAPPED@@K@Z public: bool __thiscall CFFIoCompletionPort::GetQueuedStatus(unsigned long &,void * *,_OVERLAPPED * *,unsigned long)const
FFBool __thiscall _GetQueuedStatus_CFFIoCompletionPort__QBE_NAAKPAPAXPAPAU_OVERLAPPED__K_Z( CFFIoCompletionPort const *, FFU32 *, FFLPVoid *, SFFOverlapped * *, FFU32 );
// ?PostQueuedStatus@CFFIoCompletionPort@@QAE_NKPAXPAU_OVERLAPPED@@@Z public: bool __thiscall CFFIoCompletionPort::PostQueuedStatus(unsigned long,void *,_OVERLAPPED *)
FFBool __thiscall _PostQueuedStatus_CFFIoCompletionPort__QAE_NKPAXPAU_OVERLAPPED___Z( CFFIoCompletionPort *, FFU32, FFLPVoid, SFFOverlapped * );
