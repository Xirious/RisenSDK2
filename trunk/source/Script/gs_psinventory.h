#ifndef GS_PSINVENTORY_H_INCLUDED
#define GS_PSINVENTORY_H_INCLUDED

GS_DECLARE_PROPERTYSET( PSInventory, gCInventory_PS )
protected:
    Entity         DropItemFromSlot( gESlot );
    Entity         DropItemsFromSlot( gESlot, GEInt );
    GEInt          FindStackIndex( gESlot ) const;
    Entity         GetDefaultItemFromSlot( gESlot ) const;
    Entity         GetItemFromSlot( gESlot ) const;
    gESlot         GetSlotFromStack( GEInt ) const;
    gEItemHoldType GetSlotHoldType( gESlot ) const;
    gEItemUseType  GetSlotUseType( gESlot ) const;
    void           SwapSlots( gESlot, gESlot );
public:
    void           ArrangeStacks( void );
    GEBool         AssignStackToQuickSlot( GEInt, GEInt );
    void           AssureAll( void );
    GEInt          AssureItems( Template const &, GEInt, gEStackType );
    GEInt          AssureItemsEx( Template const &, GEInt, GEInt, gEStackType );
    GEBool         CanEquipStackToSlot( GEInt, gEEquipSlot );
    GEInt          CanSynthesize( Entity const & ) const;
    GEInt          Compare( GEInt, GEInt ) const;
    GEBool         ConsumeItems( GEInt, GEInt );
    GEInt          CreateItems( Template const &, GEInt, gEStackType );
    GEBool         DeleteItems( GEInt, GEInt );
    GEBool         DeleteStack( GEInt );
    Entity         DropLeftHoldItem( void );
    Entity         DropRightHoldItem( void );
    Entity         DropStack( GEInt, bCMatrix const & );
    GEBool         EquipStack( GEInt );
    GEBool         EquipStackToSlot( GEInt, gEEquipSlot );
    GEInt          FindStackIndex( Template const &, GEInt, GEBool ) const;
    GEInt          FindStackIndex( Template const &, gEStackType, GEInt, GEBool ) const;
    GEInt          FindStackIndex( gEEquipSlot ) const;
    GEInt          FindStackIndexByQuickSlot( GEInt ) const;
    GEInt          GetAmount( GEInt ) const;
    gEItemCategory GetCategory( GEInt ) const;
    gEEquipSlot    GetEquipSlotFromStack( GEInt ) const;
    gEItemUseType  GetEquipSlotUseType( gEEquipSlot ) const;
    gEItemHoldType GetHoldType( GEInt ) const;
    GEInt          GetItemAmount( Template const & ) const;
    GEInt          GetItemAmount( gEItemUseType ) const;
    Entity         GetLeftHoldItem( void ) const;
    GEInt          GetLeftHoldStack( void ) const;
    gEItemHoldType GetLeftHoldType( void ) const;
    gEItemUseType  GetLeftHoldUseType( void ) const;
    GEFloat        GetMoneyAmount( void ) const;
    GEFloat        GetPurchaseAmount( Entity const & ) const;
    GEInt          GetQuickslotFromStack( GEInt ) const;
    Entity         GetRightHoldItem( void ) const;
    GEInt          GetRightHoldStack( void ) const;
    gEItemHoldType GetRightHoldType( void ) const;
    gEItemUseType  GetRightHoldUseType( void ) const;
    GEFloat        GetSaleAmount( Entity const & ) const;
    GEInt          GetSelectLimit( GEInt ) const;
    GEInt          GetSelectRemain( GEInt ) const;
    GEInt          GetSelection( GEInt ) const;
    GEInt          GetStackCount( void ) const;
    gEStackType    GetStackType( GEInt ) const;
    Template       GetTemplate( GEInt ) const;
    Entity         GetTemplateItem( GEInt ) const;
    gEItemUseType  GetUseType( GEInt ) const;
    GEBool         HasItems( Template const &, GEInt ) const;
    GEBool         HasItems( gEItemUseType, GEInt ) const;
    GEBool         HoldLeftStack( GEInt );
    GEBool         HoldRightStack( GEInt );
    GEBool         HoldStacks( GEInt, GEInt );
    GEInt          IDToStack( GEU32 ) const;
    GEInt          InsertStack( Entity const & );
    GEBool         IsGeneratedPlunder( void ) const;
    GEBool         IsGeneratedTrade( void ) const;
    GEBool         IsHoldingLeft( GEInt );
    GEBool         IsHoldingRight( GEInt );
    GEBool         IsHoldingStacks( GEInt, GEInt );
    GEBool         IsHoldingUseTypes( gEItemUseType, gEItemUseType );
    GEBool         IsPermanent( GEInt ) const;
    GEBool         IsStackEquiped( GEInt ) const;
    GEBool         IsValid( void ) const;
    GEBool         LootSelections( Entity & );
    void           MergeStacks( void );
    void           SetAmount( GEInt, GEInt const & );
    void           SetGeneratedPlunder( GEBool );
    void           SetGeneratedTrade( GEBool );
    void           SetMaxSelectLimit( void );
    void           SetMaxSelection( void );
    void           SetMinSelectLimit( void );
    void           SetMinSelection( void );
    void           SetMoneyAmount( GEInt );
    void           SetSelectLimit( GEInt, GEInt const & );
    void           SetSelection( GEInt, GEInt const & );
    void           SetStackType( GEInt, gEStackType );
    void           SortStacks( void );
    GEInt          SplitStack( GEInt, GEInt );
    GEU32          StackToID( GEInt ) const;
    void           SwapHoldSlots( void );
    GEInt          Synthesize( Entity const &, GEInt );
    GEBool         TradeSelections( Entity & );
    GEBool         TransferAmountTo( GEInt, GEInt, Entity & );
    GEBool         UnEquipStack( GEInt );
    GEBool         UnEquipStackFromSlot( gEEquipSlot );
    void           UpdateVisibility( void );
    GEBool         UseStack( GEInt );
};

#endif
