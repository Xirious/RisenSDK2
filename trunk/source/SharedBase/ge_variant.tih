enum bCVariant_bEType : GEEnum
{
    bEType_Empty,
    bEType_U8,
    bEType_I8,
    bEType_U16,
    bEType_I16,
    bEType_U32,
    bEType_I32,
    bEType_Int,
    bEType_U64,
    bEType_I64,
    bEType_Bool,
    bEType_Float,
    bEType_Double,
    bEType_VoidPointer,
    bEType_String
};

union bCVariant_bUType
{
    GELPVoid m_pData;  //NOTE: IDA/Hex-Rays are using the first declaration
    GEU8     m_u8Data;
    GEI8     m_i8Data;
    GEU16    m_u16Data;
    GEI16    m_i16Data;
    GEU32    m_u32Data;
    GEI32    m_i32Data;
    GEU64    m_u64Data;
    GEI64    m_i64Data;
    GEInt    m_iData;
    GEBool   m_bData;
    GEFloat  m_fData;
    GEDouble m_dData;
    GELPChar m_pcData;
};

struct bCVariant
{
    bCVariant_bEType m_Type;
                     GE_PADDING( 4 )
    bCVariant_bUType m_Data;
};
// ??0bCVariant@@QAE@ABC@Z public: __thiscall bCVariant::bCVariant(signed char const &)
bCVariant * __thiscall __0bCVariant__QAE_ABC_Z( bCVariant *, GEI8 const * );
// ??0bCVariant@@QAE@ABE@Z public: __thiscall bCVariant::bCVariant(unsigned char const &)
bCVariant * __thiscall __0bCVariant__QAE_ABE_Z( bCVariant *, GEU8 const * );
// ??0bCVariant@@QAE@ABF@Z public: __thiscall bCVariant::bCVariant(short const &)
bCVariant * __thiscall __0bCVariant__QAE_ABF_Z( bCVariant *, GEI16 const * );
// ??0bCVariant@@QAE@ABG@Z public: __thiscall bCVariant::bCVariant(unsigned short const &)
bCVariant * __thiscall __0bCVariant__QAE_ABG_Z( bCVariant *, GEU16 const * );
// ??0bCVariant@@QAE@ABH@Z public: __thiscall bCVariant::bCVariant(int const &)
bCVariant * __thiscall __0bCVariant__QAE_ABH_Z( bCVariant *, GEInt const * );
// ??0bCVariant@@QAE@ABJ@Z public: __thiscall bCVariant::bCVariant(long const &)
bCVariant * __thiscall __0bCVariant__QAE_ABJ_Z( bCVariant *, GEI32 const * );
// ??0bCVariant@@QAE@ABK@Z public: __thiscall bCVariant::bCVariant(unsigned long const &)
bCVariant * __thiscall __0bCVariant__QAE_ABK_Z( bCVariant *, GEU32 const * );
// ??0bCVariant@@QAE@ABM@Z public: __thiscall bCVariant::bCVariant(float const &)
bCVariant * __thiscall __0bCVariant__QAE_ABM_Z( bCVariant *, GEFloat const * );
// ??0bCVariant@@QAE@ABN@Z public: __thiscall bCVariant::bCVariant(double const &)
bCVariant * __thiscall __0bCVariant__QAE_ABN_Z( bCVariant *, GEDouble const * );
// ??0bCVariant@@QAE@ABQAD@Z public: __thiscall bCVariant::bCVariant(char * const &)
bCVariant * __thiscall __0bCVariant__QAE_ABQAD_Z( bCVariant *, GELPChar const * );
// ??0bCVariant@@QAE@ABQAX@Z public: __thiscall bCVariant::bCVariant(void * const &)
bCVariant * __thiscall __0bCVariant__QAE_ABQAX_Z( bCVariant *, GELPVoid const * );
// ??0bCVariant@@QAE@ABV0@@Z public: __thiscall bCVariant::bCVariant(bCVariant const &)
bCVariant * __thiscall __0bCVariant__QAE_ABV0__Z( bCVariant *, bCVariant const * );
// ??0bCVariant@@QAE@AB_J@Z public: __thiscall bCVariant::bCVariant(__int64 const &)
bCVariant * __thiscall __0bCVariant__QAE_AB_J_Z( bCVariant *, GEI64 const * );
// ??0bCVariant@@QAE@AB_K@Z public: __thiscall bCVariant::bCVariant(unsigned __int64 const &)
bCVariant * __thiscall __0bCVariant__QAE_AB_K_Z( bCVariant *, GEU64 const * );
// ??0bCVariant@@QAE@AB_N@Z public: __thiscall bCVariant::bCVariant(bool const &)
bCVariant * __thiscall __0bCVariant__QAE_AB_N_Z( bCVariant *, GEBool const * );
// ??0bCVariant@@QAE@XZ public: __thiscall bCVariant::bCVariant(void)
bCVariant * __thiscall __0bCVariant__QAE_XZ( bCVariant * );
// ??1bCVariant@@QAE@XZ public: __thiscall bCVariant::~bCVariant(void)
void __thiscall __1bCVariant__QAE_XZ( bCVariant * );
// ??4bCVariant@@QAEABV0@ABC@Z public: bCVariant const & __thiscall bCVariant::operator=(signed char const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABC_Z( bCVariant *, GEI8 const * );
// ??4bCVariant@@QAEABV0@ABE@Z public: bCVariant const & __thiscall bCVariant::operator=(unsigned char const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABE_Z( bCVariant *, GEU8 const * );
// ??4bCVariant@@QAEABV0@ABF@Z public: bCVariant const & __thiscall bCVariant::operator=(short const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABF_Z( bCVariant *, GEI16 const * );
// ??4bCVariant@@QAEABV0@ABG@Z public: bCVariant const & __thiscall bCVariant::operator=(unsigned short const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABG_Z( bCVariant *, GEU16 const * );
// ??4bCVariant@@QAEABV0@ABH@Z public: bCVariant const & __thiscall bCVariant::operator=(int const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABH_Z( bCVariant *, GEInt const * );
// ??4bCVariant@@QAEABV0@ABJ@Z public: bCVariant const & __thiscall bCVariant::operator=(long const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABJ_Z( bCVariant *, GEI32 const * );
// ??4bCVariant@@QAEABV0@ABK@Z public: bCVariant const & __thiscall bCVariant::operator=(unsigned long const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABK_Z( bCVariant *, GEU32 const * );
// ??4bCVariant@@QAEABV0@ABM@Z public: bCVariant const & __thiscall bCVariant::operator=(float const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABM_Z( bCVariant *, GEFloat const * );
// ??4bCVariant@@QAEABV0@ABN@Z public: bCVariant const & __thiscall bCVariant::operator=(double const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABN_Z( bCVariant *, GEDouble const * );
// ??4bCVariant@@QAEABV0@ABQAD@Z public: bCVariant const & __thiscall bCVariant::operator=(char * const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABQAD_Z( bCVariant *, GELPChar const * );
// ??4bCVariant@@QAEABV0@ABQAX@Z public: bCVariant const & __thiscall bCVariant::operator=(void * const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABQAX_Z( bCVariant *, GELPVoid const * );
// ??4bCVariant@@QAEABV0@ABV0@@Z public: bCVariant const & __thiscall bCVariant::operator=(bCVariant const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_ABV0__Z( bCVariant *, bCVariant const * );
// ??4bCVariant@@QAEABV0@AB_J@Z public: bCVariant const & __thiscall bCVariant::operator=(__int64 const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_AB_J_Z( bCVariant *, GEI64 const * );
// ??4bCVariant@@QAEABV0@AB_K@Z public: bCVariant const & __thiscall bCVariant::operator=(unsigned __int64 const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_AB_K_Z( bCVariant *, GEU64 const * );
// ??4bCVariant@@QAEABV0@AB_N@Z public: bCVariant const & __thiscall bCVariant::operator=(bool const &)
bCVariant const * __thiscall __4bCVariant__QAEABV0_AB_N_Z( bCVariant *, GEBool const * );
// ?AccessData@bCVariant@@IAEAATbUType@1@XZ protected: bCVariant::bUType & __thiscall bCVariant::AccessData(void)
bCVariant_bUType * __thiscall _AccessData_bCVariant__IAEAATbUType_1_XZ( bCVariant * );
// ?AccessType@bCVariant@@IAEAAW4bEType@1@XZ protected: bCVariant::bEType & __thiscall bCVariant::AccessType(void)
bCVariant_bEType * __thiscall _AccessType_bCVariant__IAEAAW4bEType_1_XZ( bCVariant * );
// ?Clear@bCVariant@@QAEXXZ public: void __thiscall bCVariant::Clear(void)
void __thiscall _Clear_bCVariant__QAEXXZ( bCVariant * );
// ?CopyFrom@bCVariant@@QAEXABV1@@Z public: void __thiscall bCVariant::CopyFrom(bCVariant const &)
void __thiscall _CopyFrom_bCVariant__QAEXABV1__Z( bCVariant *, bCVariant const * );
// ?CopyTo@bCVariant@@QBEXAAV1@@Z public: void __thiscall bCVariant::CopyTo(bCVariant &)const
void __thiscall _CopyTo_bCVariant__QBEXAAV1__Z( bCVariant const *, bCVariant * );
// ?GetBool@bCVariant@@QBEAB_NXZ public: bool const & __thiscall bCVariant::GetBool(void)const
GEBool const * __thiscall _GetBool_bCVariant__QBEAB_NXZ( bCVariant const * );
// ?GetData@bCVariant@@QBEABTbUType@1@XZ public: bCVariant::bUType const & __thiscall bCVariant::GetData(void)const
bCVariant_bUType const * __thiscall _GetData_bCVariant__QBEABTbUType_1_XZ( bCVariant const * );
// ?GetData@bCVariant@@QBEXAAC@Z public: void __thiscall bCVariant::GetData(signed char &)const
void __thiscall _GetData_bCVariant__QBEXAAC_Z( bCVariant const *, GEI8 * );
// ?GetData@bCVariant@@QBEXAAE@Z public: void __thiscall bCVariant::GetData(unsigned char &)const
void __thiscall _GetData_bCVariant__QBEXAAE_Z( bCVariant const *, GEU8 * );
// ?GetData@bCVariant@@QBEXAAF@Z public: void __thiscall bCVariant::GetData(short &)const
void __thiscall _GetData_bCVariant__QBEXAAF_Z( bCVariant const *, GEI16 * );
// ?GetData@bCVariant@@QBEXAAG@Z public: void __thiscall bCVariant::GetData(unsigned short &)const
void __thiscall _GetData_bCVariant__QBEXAAG_Z( bCVariant const *, GEU16 * );
// ?GetData@bCVariant@@QBEXAAH@Z public: void __thiscall bCVariant::GetData(int &)const
void __thiscall _GetData_bCVariant__QBEXAAH_Z( bCVariant const *, GEInt * );
// ?GetData@bCVariant@@QBEXAAJ@Z public: void __thiscall bCVariant::GetData(long &)const
void __thiscall _GetData_bCVariant__QBEXAAJ_Z( bCVariant const *, GEI32 * );
// ?GetData@bCVariant@@QBEXAAK@Z public: void __thiscall bCVariant::GetData(unsigned long &)const
void __thiscall _GetData_bCVariant__QBEXAAK_Z( bCVariant const *, GEU32 * );
// ?GetData@bCVariant@@QBEXAAM@Z public: void __thiscall bCVariant::GetData(float &)const
void __thiscall _GetData_bCVariant__QBEXAAM_Z( bCVariant const *, GEFloat * );
// ?GetData@bCVariant@@QBEXAAN@Z public: void __thiscall bCVariant::GetData(double &)const
void __thiscall _GetData_bCVariant__QBEXAAN_Z( bCVariant const *, GEDouble * );
// ?GetData@bCVariant@@QBEXAAPAD@Z public: void __thiscall bCVariant::GetData(char * &)const
void __thiscall _GetData_bCVariant__QBEXAAPAD_Z( bCVariant const *, GELPChar * );
// ?GetData@bCVariant@@QBEXAAPAX@Z public: void __thiscall bCVariant::GetData(void * &)const
void __thiscall _GetData_bCVariant__QBEXAAPAX_Z( bCVariant const *, GELPVoid * );
// ?GetData@bCVariant@@QBEXAATbUType@1@@Z public: void __thiscall bCVariant::GetData(bCVariant::bUType &)const
void __thiscall _GetData_bCVariant__QBEXAATbUType_1__Z( bCVariant const *, bCVariant_bUType * );
// ?GetData@bCVariant@@QBEXAA_J@Z public: void __thiscall bCVariant::GetData(__int64 &)const
void __thiscall _GetData_bCVariant__QBEXAA_J_Z( bCVariant const *, GEI64 * );
// ?GetData@bCVariant@@QBEXAA_K@Z public: void __thiscall bCVariant::GetData(unsigned __int64 &)const
void __thiscall _GetData_bCVariant__QBEXAA_K_Z( bCVariant const *, GEU64 * );
// ?GetData@bCVariant@@QBEXAA_N@Z public: void __thiscall bCVariant::GetData(bool &)const
void __thiscall _GetData_bCVariant__QBEXAA_N_Z( bCVariant const *, GEBool * );
// ?GetDouble@bCVariant@@QBEABNXZ public: double const & __thiscall bCVariant::GetDouble(void)const
GEDouble const * __thiscall _GetDouble_bCVariant__QBEABNXZ( bCVariant const * );
// ?GetFloat@bCVariant@@QBEABMXZ public: float const & __thiscall bCVariant::GetFloat(void)const
GEFloat const * __thiscall _GetFloat_bCVariant__QBEABMXZ( bCVariant const * );
// ?GetI16@bCVariant@@QBEABFXZ public: short const & __thiscall bCVariant::GetI16(void)const
GEI16 const * __thiscall _GetI16_bCVariant__QBEABFXZ( bCVariant const * );
// ?GetI32@bCVariant@@QBEABJXZ public: long const & __thiscall bCVariant::GetI32(void)const
GEI32 const * __thiscall _GetI32_bCVariant__QBEABJXZ( bCVariant const * );
// ?GetI64@bCVariant@@QBEAB_JXZ public: __int64 const & __thiscall bCVariant::GetI64(void)const
GEI64 const * __thiscall _GetI64_bCVariant__QBEAB_JXZ( bCVariant const * );
// ?GetI8@bCVariant@@QBEABCXZ public: signed char const & __thiscall bCVariant::GetI8(void)const
GEI8 const * __thiscall _GetI8_bCVariant__QBEABCXZ( bCVariant const * );
// ?GetInt@bCVariant@@QBEABHXZ public: int const & __thiscall bCVariant::GetInt(void)const
GEInt const * __thiscall _GetInt_bCVariant__QBEABHXZ( bCVariant const * );
// ?GetString@bCVariant@@QBEABQADXZ public: char * const & __thiscall bCVariant::GetString(void)const
GELPChar const * __thiscall _GetString_bCVariant__QBEABQADXZ( bCVariant const * );
// ?GetType@bCVariant@@QBEABW4bEType@1@XZ public: bCVariant::bEType const & __thiscall bCVariant::GetType(void)const
bCVariant_bEType const * __thiscall _GetType_bCVariant__QBEABW4bEType_1_XZ( bCVariant const * );
// ?GetType@bCVariant@@QBEXAAW4bEType@1@@Z public: void __thiscall bCVariant::GetType(bCVariant::bEType &)const
void __thiscall _GetType_bCVariant__QBEXAAW4bEType_1__Z( bCVariant const *, bCVariant_bEType * );
// ?GetU16@bCVariant@@QBEABGXZ public: unsigned short const & __thiscall bCVariant::GetU16(void)const
GEU16 const * __thiscall _GetU16_bCVariant__QBEABGXZ( bCVariant const * );
// ?GetU32@bCVariant@@QBEABKXZ public: unsigned long const & __thiscall bCVariant::GetU32(void)const
GEU32 const * __thiscall _GetU32_bCVariant__QBEABKXZ( bCVariant const * );
// ?GetU64@bCVariant@@QBEAB_KXZ public: unsigned __int64 const & __thiscall bCVariant::GetU64(void)const
GEU64 const * __thiscall _GetU64_bCVariant__QBEAB_KXZ( bCVariant const * );
// ?GetU8@bCVariant@@QBEABEXZ public: unsigned char const & __thiscall bCVariant::GetU8(void)const
GEU8 const * __thiscall _GetU8_bCVariant__QBEABEXZ( bCVariant const * );
// ?GetVoidPointer@bCVariant@@QBEABQAXXZ public: void * const & __thiscall bCVariant::GetVoidPointer(void)const
GELPVoid const * __thiscall _GetVoidPointer_bCVariant__QBEABQAXXZ( bCVariant const * );
// ?Init@bCVariant@@IAEXXZ protected: void __thiscall bCVariant::Init(void)
void __thiscall _Init_bCVariant__IAEXXZ( bCVariant * );
// ?SetData@bCVariant@@IAEXABTbUType@1@@Z protected: void __thiscall bCVariant::SetData(bCVariant::bUType const &)
void __thiscall _SetData_bCVariant__IAEXABTbUType_1__Z( bCVariant *, bCVariant_bUType const * );
// ?SetData@bCVariant@@QAEXC@Z public: void __thiscall bCVariant::SetData(signed char)
void __thiscall _SetData_bCVariant__QAEXC_Z( bCVariant *, GEI8 );
// ?SetData@bCVariant@@QAEXE@Z public: void __thiscall bCVariant::SetData(unsigned char)
void __thiscall _SetData_bCVariant__QAEXE_Z( bCVariant *, GEU8 );
// ?SetData@bCVariant@@QAEXF@Z public: void __thiscall bCVariant::SetData(short)
void __thiscall _SetData_bCVariant__QAEXF_Z( bCVariant *, GEI16 );
// ?SetData@bCVariant@@QAEXG@Z public: void __thiscall bCVariant::SetData(unsigned short)
void __thiscall _SetData_bCVariant__QAEXG_Z( bCVariant *, GEU16 );
// ?SetData@bCVariant@@QAEXH@Z public: void __thiscall bCVariant::SetData(int)
void __thiscall _SetData_bCVariant__QAEXH_Z( bCVariant *, GEInt );
// ?SetData@bCVariant@@QAEXJ@Z public: void __thiscall bCVariant::SetData(long)
void __thiscall _SetData_bCVariant__QAEXJ_Z( bCVariant *, GEI32 );
// ?SetData@bCVariant@@QAEXK@Z public: void __thiscall bCVariant::SetData(unsigned long)
void __thiscall _SetData_bCVariant__QAEXK_Z( bCVariant *, GEU32 );
// ?SetData@bCVariant@@QAEXM@Z public: void __thiscall bCVariant::SetData(float)
void __thiscall _SetData_bCVariant__QAEXM_Z( bCVariant *, GEFloat );
// ?SetData@bCVariant@@QAEXN@Z public: void __thiscall bCVariant::SetData(double)
void __thiscall _SetData_bCVariant__QAEXN_Z( bCVariant *, GEDouble );
// ?SetData@bCVariant@@QAEXPBD@Z public: void __thiscall bCVariant::SetData(char const *)
void __thiscall _SetData_bCVariant__QAEXPBD_Z( bCVariant *, GELPCChar );
// ?SetData@bCVariant@@QAEXPBX@Z public: void __thiscall bCVariant::SetData(void const *)
void __thiscall _SetData_bCVariant__QAEXPBX_Z( bCVariant *, GELPCVoid );
// ?SetData@bCVariant@@QAEX_J@Z public: void __thiscall bCVariant::SetData(__int64)
void __thiscall _SetData_bCVariant__QAEX_J_Z( bCVariant *, GEI64 );
// ?SetData@bCVariant@@QAEX_K@Z public: void __thiscall bCVariant::SetData(unsigned __int64)
void __thiscall _SetData_bCVariant__QAEX_K_Z( bCVariant *, GEU64 );
// ?SetData@bCVariant@@QAEX_N@Z public: void __thiscall bCVariant::SetData(bool)
void __thiscall _SetData_bCVariant__QAEX_N_Z( bCVariant *, GEBool );
// ?SetType@bCVariant@@IAEXABW4bEType@1@@Z protected: void __thiscall bCVariant::SetType(bCVariant::bEType const &)
void __thiscall _SetType_bCVariant__IAEXABW4bEType_1__Z( bCVariant *, bCVariant_bEType const * );
