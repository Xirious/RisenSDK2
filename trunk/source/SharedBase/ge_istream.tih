struct bCIStream;
struct bCIStream_vftable
{
    GEU32 (__thiscall * ReadString)( bCIStream *, bCString & );       // Read
    GEU32 (__thiscall * ReadBuffer)( bCIStream *, GELPVoid, GEU32 );  // Read
    void  (__thiscall * __vecDelDtor)( bCIStream *, unsigned int );
};
struct bCIStream_data
{
    GEU16 m_u16StreamVersion;
          GE_PADDING( 2 )
};
struct bCIStream
{
    bCIStream_vftable const * __vfptr;
    bCIStream_data            data;
};
// ??0bCIStream@@QAE@ABV0@@Z public: __thiscall bCIStream::bCIStream(bCIStream const &)
bCIStream * __thiscall __0bCIStream__QAE_ABV0__Z( bCIStream *, bCIStream const * );
// ??0bCIStream@@QAE@XZ public: __thiscall bCIStream::bCIStream(void)
bCIStream * __thiscall __0bCIStream__QAE_XZ( bCIStream * );
// ??1bCIStream@@UAE@XZ public: virtual __thiscall bCIStream::~bCIStream(void)
void __thiscall __1bCIStream__UAE_XZ( bCIStream * );
// ??4bCIStream@@QAEAAV0@ABV0@@Z public: bCIStream & __thiscall bCIStream::operator=(bCIStream const &)
bCIStream * __thiscall __4bCIStream__QAEAAV0_ABV0__Z( bCIStream *, bCIStream const * );
// ??5bCIStream@@QAEAAV0@AAC@Z public: bCIStream & __thiscall bCIStream::operator>>(signed char &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAC_Z( bCIStream *, GEI8 * );
// ??5bCIStream@@QAEAAV0@AAD@Z public: bCIStream & __thiscall bCIStream::operator>>(char &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAD_Z( bCIStream *, GEChar * );
// ??5bCIStream@@QAEAAV0@AAE@Z public: bCIStream & __thiscall bCIStream::operator>>(unsigned char &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAE_Z( bCIStream *, GEU8 * );
// ??5bCIStream@@QAEAAV0@AAF@Z public: bCIStream & __thiscall bCIStream::operator>>(short &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAF_Z( bCIStream *, GEI16 * );
// ??5bCIStream@@QAEAAV0@AAG@Z public: bCIStream & __thiscall bCIStream::operator>>(unsigned short &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAG_Z( bCIStream *, GEU16 * );
// ??5bCIStream@@QAEAAV0@AAH@Z public: bCIStream & __thiscall bCIStream::operator>>(int &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAH_Z( bCIStream *, GEInt * );
// ??5bCIStream@@QAEAAV0@AAI@Z public: bCIStream & __thiscall bCIStream::operator>>(unsigned int &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAI_Z( bCIStream *, GEUInt * );
// ??5bCIStream@@QAEAAV0@AAJ@Z public: bCIStream & __thiscall bCIStream::operator>>(long &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAJ_Z( bCIStream *, GEI32 * );
// ??5bCIStream@@QAEAAV0@AAK@Z public: bCIStream & __thiscall bCIStream::operator>>(unsigned long &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAK_Z( bCIStream *, GEU32 * );
// ??5bCIStream@@QAEAAV0@AAM@Z public: bCIStream & __thiscall bCIStream::operator>>(float &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAM_Z( bCIStream *, GEFloat * );
// ??5bCIStream@@QAEAAV0@AAN@Z public: bCIStream & __thiscall bCIStream::operator>>(double &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAN_Z( bCIStream *, GEDouble * );
// ??5bCIStream@@QAEAAV0@AAVbCDateTime@@@Z public: bCIStream & __thiscall bCIStream::operator>>(bCDateTime &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAVbCDateTime___Z( bCIStream *, bCDateTime * );
// ??5bCIStream@@QAEAAV0@AAVbCGuid@@@Z public: bCIStream & __thiscall bCIStream::operator>>(bCGuid &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAVbCGuid___Z( bCIStream *, bCGuid * );
// ??5bCIStream@@QAEAAV0@AAVbCString@@@Z public: bCIStream & __thiscall bCIStream::operator>>(bCString &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAVbCString___Z( bCIStream *, bCString * );
// ??5bCIStream@@QAEAAV0@AAVbCUnicodeString@@@Z public: bCIStream & __thiscall bCIStream::operator>>(bCUnicodeString &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAVbCUnicodeString___Z( bCIStream *, bCUnicodeString * );
// ??5bCIStream@@QAEAAV0@AAVbCVariant@@@Z public: bCIStream & __thiscall bCIStream::operator>>(bCVariant &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AAVbCVariant___Z( bCIStream *, bCVariant * );
// ??5bCIStream@@QAEAAV0@AA_J@Z public: bCIStream & __thiscall bCIStream::operator>>(__int64 &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AA_J_Z( bCIStream *, GEI64 * );
// ??5bCIStream@@QAEAAV0@AA_K@Z public: bCIStream & __thiscall bCIStream::operator>>(unsigned __int64 &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AA_K_Z( bCIStream *, GEU64 * );
// ??5bCIStream@@QAEAAV0@AA_N@Z public: bCIStream & __thiscall bCIStream::operator>>(bool &)
bCIStream * __thiscall __5bCIStream__QAEAAV0_AA_N_Z( bCIStream *, GEBool * );
// ??_7bCIStream@@6B@ const bCIStream::`vftable'
bCIStream_vftable const DLLIMPORT ___7bCIStream__6B_;
// ?GetStreamVersion@bCIStream@@QBEGXZ public: unsigned short __thiscall bCIStream::GetStreamVersion(void)const
GEU16 __thiscall _GetStreamVersion_bCIStream__QBEGXZ( bCIStream const * );
// ?Read@bCIStream@@QAEKAAC@Z public: unsigned long __thiscall bCIStream::Read(signed char &)
GEU32 __thiscall _Read_bCIStream__QAEKAAC_Z( bCIStream *, GEI8 * );
// ?Read@bCIStream@@QAEKAAD@Z public: unsigned long __thiscall bCIStream::Read(char &)
GEU32 __thiscall _Read_bCIStream__QAEKAAD_Z( bCIStream *, GEChar * );
// ?Read@bCIStream@@QAEKAAE@Z public: unsigned long __thiscall bCIStream::Read(unsigned char &)
GEU32 __thiscall _Read_bCIStream__QAEKAAE_Z( bCIStream *, GEU8 * );
// ?Read@bCIStream@@QAEKAAF@Z public: unsigned long __thiscall bCIStream::Read(short &)
GEU32 __thiscall _Read_bCIStream__QAEKAAF_Z( bCIStream *, GEI16 * );
// ?Read@bCIStream@@QAEKAAG@Z public: unsigned long __thiscall bCIStream::Read(unsigned short &)
GEU32 __thiscall _Read_bCIStream__QAEKAAG_Z( bCIStream *, GEU16 * );
// ?Read@bCIStream@@QAEKAAH@Z public: unsigned long __thiscall bCIStream::Read(int &)
GEU32 __thiscall _Read_bCIStream__QAEKAAH_Z( bCIStream *, GEInt * );
// ?Read@bCIStream@@QAEKAAI@Z public: unsigned long __thiscall bCIStream::Read(unsigned int &)
GEU32 __thiscall _Read_bCIStream__QAEKAAI_Z( bCIStream *, GEUInt * );
// ?Read@bCIStream@@QAEKAAJ@Z public: unsigned long __thiscall bCIStream::Read(long &)
GEU32 __thiscall _Read_bCIStream__QAEKAAJ_Z( bCIStream *, GEI32 * );
// ?Read@bCIStream@@QAEKAAK@Z public: unsigned long __thiscall bCIStream::Read(unsigned long &)
GEU32 __thiscall _Read_bCIStream__QAEKAAK_Z( bCIStream *, GEU32 * );
// ?Read@bCIStream@@QAEKAAM@Z public: unsigned long __thiscall bCIStream::Read(float &)
GEU32 __thiscall _Read_bCIStream__QAEKAAM_Z( bCIStream *, GEFloat * );
// ?Read@bCIStream@@QAEKAAN@Z public: unsigned long __thiscall bCIStream::Read(double &)
GEU32 __thiscall _Read_bCIStream__QAEKAAN_Z( bCIStream *, GEDouble * );
// ?Read@bCIStream@@QAEKAAVbCDateTime@@@Z public: unsigned long __thiscall bCIStream::Read(bCDateTime &)
GEU32 __thiscall _Read_bCIStream__QAEKAAVbCDateTime___Z( bCIStream *, bCDateTime * );
// ?Read@bCIStream@@QAEKAAVbCGuid@@@Z public: unsigned long __thiscall bCIStream::Read(bCGuid &)
GEU32 __thiscall _Read_bCIStream__QAEKAAVbCGuid___Z( bCIStream *, bCGuid * );
// ?Read@bCIStream@@QAEKAAVbCUnicodeString@@@Z public: unsigned long __thiscall bCIStream::Read(bCUnicodeString &)
GEU32 __thiscall _Read_bCIStream__QAEKAAVbCUnicodeString___Z( bCIStream *, bCUnicodeString * );
// ?Read@bCIStream@@QAEKAAVbCVariant@@@Z public: unsigned long __thiscall bCIStream::Read(bCVariant &)
GEU32 __thiscall _Read_bCIStream__QAEKAAVbCVariant___Z( bCIStream *, bCVariant * );
// ?Read@bCIStream@@QAEKAA_J@Z public: unsigned long __thiscall bCIStream::Read(__int64 &)
GEU32 __thiscall _Read_bCIStream__QAEKAA_J_Z( bCIStream *, GEI64 * );
// ?Read@bCIStream@@QAEKAA_K@Z public: unsigned long __thiscall bCIStream::Read(unsigned __int64 &)
GEU32 __thiscall _Read_bCIStream__QAEKAA_K_Z( bCIStream *, GEU64 * );
// ?Read@bCIStream@@QAEKAA_N@Z public: unsigned long __thiscall bCIStream::Read(bool &)
GEU32 __thiscall _Read_bCIStream__QAEKAA_N_Z( bCIStream *, GEBool * );
// ?Read@bCIStream@@UAEKAAVbCString@@@Z public: virtual unsigned long __thiscall bCIStream::Read(bCString &)
GEU32 __thiscall _Read_bCIStream__UAEKAAVbCString___Z( bCIStream *, bCString * );
// ?Read@bCIStream@@UAEKPAXK@Z public: virtual unsigned long __thiscall bCIStream::Read(void *,unsigned long)
GEU32 __thiscall _Read_bCIStream__UAEKPAXK_Z( bCIStream *, GELPVoid, GEU32 );
// ?ReadLine@bCIStream@@QAEKAAVbCString@@@Z public: unsigned long __thiscall bCIStream::ReadLine(bCString &)
GEU32 __thiscall _ReadLine_bCIStream__QAEKAAVbCString___Z( bCIStream *, bCString * );
// ?ReadLine@bCIStream@@QAEKAAVbCUnicodeString@@@Z public: unsigned long __thiscall bCIStream::ReadLine(bCUnicodeString &)
GEU32 __thiscall _ReadLine_bCIStream__QAEKAAVbCUnicodeString___Z( bCIStream *, bCUnicodeString * );
// ?SetStreamVersion@bCIStream@@IAEXG@Z protected: void __thiscall bCIStream::SetStreamVersion(unsigned short)
void __thiscall _SetStreamVersion_bCIStream__IAEXG_Z( bCIStream *, GEU16 );

// ??6@YGAAVbCIStream@@AACAAV0@@Z bCIStream & __stdcall operator<<(signed char &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AACAAV0__Z( GEI8 *, bCIStream * );
// ??6@YGAAVbCIStream@@AADAAV0@@Z bCIStream & __stdcall operator<<(char &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AADAAV0__Z( GEChar *, bCIStream * );
// ??6@YGAAVbCIStream@@AAEAAV0@@Z bCIStream & __stdcall operator<<(unsigned char &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAEAAV0__Z( GEU8 *, bCIStream * );
// ??6@YGAAVbCIStream@@AAFAAV0@@Z bCIStream & __stdcall operator<<(short &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAFAAV0__Z( GEI16 *, bCIStream * );
// ??6@YGAAVbCIStream@@AAGAAV0@@Z bCIStream & __stdcall operator<<(unsigned short &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAGAAV0__Z( GEU16 *, bCIStream * );
// ??6@YGAAVbCIStream@@AAHAAV0@@Z bCIStream & __stdcall operator<<(int &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAHAAV0__Z( GEInt *, bCIStream * );
// ??6@YGAAVbCIStream@@AAIAAV0@@Z bCIStream & __stdcall operator<<(unsigned int &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAIAAV0__Z( GEUInt *, bCIStream * );
// ??6@YGAAVbCIStream@@AAJAAV0@@Z bCIStream & __stdcall operator<<(long &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAJAAV0__Z( GEI32 *, bCIStream * );
// ??6@YGAAVbCIStream@@AAKAAV0@@Z bCIStream & __stdcall operator<<(unsigned long &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAKAAV0__Z( GEU32 *, bCIStream * );
// ??6@YGAAVbCIStream@@AAMAAV0@@Z bCIStream & __stdcall operator<<(float &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAMAAV0__Z( GEFloat *, bCIStream * );
// ??6@YGAAVbCIStream@@AANAAV0@@Z bCIStream & __stdcall operator<<(double &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AANAAV0__Z( GEDouble *, bCIStream * );
// ??6@YGAAVbCIStream@@AAVbCDateTime@@AAV0@@Z bCIStream & __stdcall operator<<(bCDateTime &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAVbCDateTime__AAV0__Z( bCDateTime *, bCIStream * );
// ??6@YGAAVbCIStream@@AAVbCGuid@@AAV0@@Z bCIStream & __stdcall operator<<(bCGuid &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAVbCGuid__AAV0__Z( bCGuid *, bCIStream * );
// ??6@YGAAVbCIStream@@AAVbCString@@AAV0@@Z bCIStream & __stdcall operator<<(bCString &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAVbCString__AAV0__Z( bCString *, bCIStream * );
// ??6@YGAAVbCIStream@@AAVbCUnicodeString@@AAV0@@Z bCIStream & __stdcall operator<<(bCUnicodeString &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAVbCUnicodeString__AAV0__Z( bCUnicodeString *, bCIStream * );
// ??6@YGAAVbCIStream@@AAVbCVariant@@AAV0@@Z bCIStream & __stdcall operator<<(bCVariant &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AAVbCVariant__AAV0__Z( bCVariant *, bCIStream * );
// ??6@YGAAVbCIStream@@AA_JAAV0@@Z bCIStream & __stdcall operator<<(__int64 &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AA_JAAV0__Z( GEI64 *, bCIStream * );
// ??6@YGAAVbCIStream@@AA_KAAV0@@Z bCIStream & __stdcall operator<<(unsigned __int64 &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AA_KAAV0__Z( GEU64 *, bCIStream * );
// ??6@YGAAVbCIStream@@AA_NAAV0@@Z bCIStream & __stdcall operator<<(bool &,bCIStream &)
bCIStream * __stdcall __6_YGAAVbCIStream__AA_NAAV0__Z( GEBool *, bCIStream * );
