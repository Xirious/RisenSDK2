enum bCEulerAngles_bERotation : GEInt
{
    bCEulerAngles_bERotation_Yaw,
    bCEulerAngles_bERotation_Pitch,
    bCEulerAngles_bERotation_Roll,
    bCEulerAngles_bERotation_Count
};

struct bCEulerAngles
{
    GEFloat m_fYaw;
    GEFloat m_fPitch;
    GEFloat m_fRoll;
};
// ??0bCEulerAngles@@QAE@ABV0@@Z public: __thiscall bCEulerAngles::bCEulerAngles(bCEulerAngles const &)
bCEulerAngles * __thiscall __0bCEulerAngles__QAE_ABV0__Z( bCEulerAngles *, bCEulerAngles const * );
// ??0bCEulerAngles@@QAE@ABVbCAxisAngle@@@Z public: __thiscall bCEulerAngles::bCEulerAngles(bCAxisAngle const &)
bCEulerAngles * __thiscall __0bCEulerAngles__QAE_ABVbCAxisAngle___Z( bCEulerAngles *, bCAxisAngle const * );
// ??0bCEulerAngles@@QAE@ABVbCQuaternion@@@Z public: __thiscall bCEulerAngles::bCEulerAngles(bCQuaternion const &)
bCEulerAngles * __thiscall __0bCEulerAngles__QAE_ABVbCQuaternion___Z( bCEulerAngles *, bCQuaternion const * );
// ??0bCEulerAngles@@QAE@ABVbCVector@@@Z public: __thiscall bCEulerAngles::bCEulerAngles(bCVector const &)
bCEulerAngles * __thiscall __0bCEulerAngles__QAE_ABVbCVector___Z( bCEulerAngles *, bCVector const * );
// ??0bCEulerAngles@@QAE@MMM@Z public: __thiscall bCEulerAngles::bCEulerAngles(float,float,float)
bCEulerAngles * __thiscall __0bCEulerAngles__QAE_MMM_Z( bCEulerAngles *, GEFloat, GEFloat, GEFloat );
// ??0bCEulerAngles@@QAE@XZ public: __thiscall bCEulerAngles::bCEulerAngles(void)
bCEulerAngles * __thiscall __0bCEulerAngles__QAE_XZ( bCEulerAngles * );
// ??1bCEulerAngles@@QAE@XZ public: __thiscall bCEulerAngles::~bCEulerAngles(void)
void __thiscall __1bCEulerAngles__QAE_XZ( bCEulerAngles * );
// ??4bCEulerAngles@@QAEAAV0@ABV0@@Z public: bCEulerAngles & __thiscall bCEulerAngles::operator=(bCEulerAngles const &)
bCEulerAngles * __thiscall __4bCEulerAngles__QAEAAV0_ABV0__Z( bCEulerAngles *, bCEulerAngles const * );
// ??5bCEulerAngles@@QBEAAVbCOStream@@AAV1@@Z public: bCOStream & __thiscall bCEulerAngles::operator>>(bCOStream &)const
bCOStream * __thiscall __5bCEulerAngles__QBEAAVbCOStream__AAV1__Z( bCEulerAngles const *, bCOStream * );
// ??6bCEulerAngles@@QAEAAVbCIStream@@AAV1@@Z public: bCIStream & __thiscall bCEulerAngles::operator<<(bCIStream &)
bCIStream * __thiscall __6bCEulerAngles__QAEAAVbCIStream__AAV1__Z( bCEulerAngles *, bCIStream * );
// ??8bCEulerAngles@@QBE_NABV0@@Z public: bool __thiscall bCEulerAngles::operator==(bCEulerAngles const &)const
GEBool __thiscall __8bCEulerAngles__QBE_NABV0__Z( bCEulerAngles const *, bCEulerAngles const * );
// ??9bCEulerAngles@@QBE_NABV0@@Z public: bool __thiscall bCEulerAngles::operator!=(bCEulerAngles const &)const
GEBool __thiscall __9bCEulerAngles__QBE_NABV0__Z( bCEulerAngles const *, bCEulerAngles const * );
// ??AbCEulerAngles@@QAEAAMH@Z public: float & __thiscall bCEulerAngles::operator[](int)
GEFloat * __thiscall __AbCEulerAngles__QAEAAMH_Z( bCEulerAngles *, bCEulerAngles_bERotation );
// ??AbCEulerAngles@@QBEMH@Z public: float __thiscall bCEulerAngles::operator[](int)const
GEFloat __thiscall __AbCEulerAngles__QBEMH_Z( bCEulerAngles const *, bCEulerAngles_bERotation );
// ??DbCEulerAngles@@QBE?BV0@M@Z public: bCEulerAngles const __thiscall bCEulerAngles::operator*(float)const
bCEulerAngles const * __thiscall __DbCEulerAngles__QBE_BV0_M_Z( bCEulerAngles const *, bCEulerAngles *, GEFloat );
// ??GbCEulerAngles@@QBE?BV0@ABV0@@Z public: bCEulerAngles const __thiscall bCEulerAngles::operator-(bCEulerAngles const &)const
bCEulerAngles const * __thiscall __GbCEulerAngles__QBE_BV0_ABV0__Z( bCEulerAngles const *, bCEulerAngles *, bCEulerAngles const * );
// ??GbCEulerAngles@@QBE?BV0@XZ public: bCEulerAngles const __thiscall bCEulerAngles::operator-(void)const
bCEulerAngles const * __thiscall __GbCEulerAngles__QBE_BV0_XZ( bCEulerAngles const *, bCEulerAngles * );
// ??HbCEulerAngles@@QBE?BV0@ABV0@@Z public: bCEulerAngles const __thiscall bCEulerAngles::operator+(bCEulerAngles const &)const
bCEulerAngles const * __thiscall __HbCEulerAngles__QBE_BV0_ABV0__Z( bCEulerAngles const *, bCEulerAngles *, bCEulerAngles const * );
// ??XbCEulerAngles@@QAEAAV0@M@Z public: bCEulerAngles & __thiscall bCEulerAngles::operator*=(float)
bCEulerAngles * __thiscall __XbCEulerAngles__QAEAAV0_M_Z( bCEulerAngles *, GEFloat );
// ??YbCEulerAngles@@QAEAAV0@ABV0@@Z public: bCEulerAngles & __thiscall bCEulerAngles::operator+=(bCEulerAngles const &)
bCEulerAngles * __thiscall __YbCEulerAngles__QAEAAV0_ABV0__Z( bCEulerAngles *, bCEulerAngles const * );
// ??ZbCEulerAngles@@QAEAAV0@ABV0@@Z public: bCEulerAngles & __thiscall bCEulerAngles::operator-=(bCEulerAngles const &)
bCEulerAngles * __thiscall __ZbCEulerAngles__QAEAAV0_ABV0__Z( bCEulerAngles *, bCEulerAngles const * );
// ?AccessPitch@bCEulerAngles@@QAEAAMXZ public: float & __thiscall bCEulerAngles::AccessPitch(void)
GEFloat * __thiscall _AccessPitch_bCEulerAngles__QAEAAMXZ( bCEulerAngles * );
// ?AccessRoll@bCEulerAngles@@QAEAAMXZ public: float & __thiscall bCEulerAngles::AccessRoll(void)
GEFloat * __thiscall _AccessRoll_bCEulerAngles__QAEAAMXZ( bCEulerAngles * );
// ?AccessYaw@bCEulerAngles@@QAEAAMXZ public: float & __thiscall bCEulerAngles::AccessYaw(void)
GEFloat * __thiscall _AccessYaw_bCEulerAngles__QAEAAMXZ( bCEulerAngles * );
// ?Clear@bCEulerAngles@@QAEXXZ public: void __thiscall bCEulerAngles::Clear(void)
void __thiscall _Clear_bCEulerAngles__QAEXXZ( bCEulerAngles * );
// ?GetAxisAngle@bCEulerAngles@@QBE?AVbCAxisAngle@@XZ public: bCAxisAngle __thiscall bCEulerAngles::GetAxisAngle(void)const
bCAxisAngle * __thiscall _GetAxisAngle_bCEulerAngles__QBE_AVbCAxisAngle__XZ( bCEulerAngles const *, bCAxisAngle * );
// ?GetPitch@bCEulerAngles@@QBEMXZ public: float __thiscall bCEulerAngles::GetPitch(void)const
GEFloat __thiscall _GetPitch_bCEulerAngles__QBEMXZ( bCEulerAngles const * );
// ?GetPitch@bCEulerAngles@@QBEXAAM@Z public: void __thiscall bCEulerAngles::GetPitch(float &)const
void __thiscall _GetPitch_bCEulerAngles__QBEXAAM_Z( bCEulerAngles const *, GEFloat * );
// ?GetQuaternion@bCEulerAngles@@QBE?AVbCQuaternion@@XZ public: bCQuaternion __thiscall bCEulerAngles::GetQuaternion(void)const
bCQuaternion * __thiscall _GetQuaternion_bCEulerAngles__QBE_AVbCQuaternion__XZ( bCEulerAngles const *, bCQuaternion * );
// ?GetRoll@bCEulerAngles@@QBEMXZ public: float __thiscall bCEulerAngles::GetRoll(void)const
GEFloat __thiscall _GetRoll_bCEulerAngles__QBEMXZ( bCEulerAngles const * );
// ?GetRoll@bCEulerAngles@@QBEXAAM@Z public: void __thiscall bCEulerAngles::GetRoll(float &)const
void __thiscall _GetRoll_bCEulerAngles__QBEXAAM_Z( bCEulerAngles const *, GEFloat * );
// ?GetYaw@bCEulerAngles@@QBEMXZ public: float __thiscall bCEulerAngles::GetYaw(void)const
GEFloat __thiscall _GetYaw_bCEulerAngles__QBEMXZ( bCEulerAngles const * );
// ?GetYaw@bCEulerAngles@@QBEXAAM@Z public: void __thiscall bCEulerAngles::GetYaw(float &)const
void __thiscall _GetYaw_bCEulerAngles__QBEXAAM_Z( bCEulerAngles const *, GEFloat * );
// ?SetEulerAngles@bCEulerAngles@@QAEXABV1@@Z public: void __thiscall bCEulerAngles::SetEulerAngles(bCEulerAngles const &)
void __thiscall _SetEulerAngles_bCEulerAngles__QAEXABV1__Z( bCEulerAngles *, bCEulerAngles const * );
// ?SetEulerAngles@bCEulerAngles@@QAEXABVbCAxisAngle@@@Z public: void __thiscall bCEulerAngles::SetEulerAngles(bCAxisAngle const &)
void __thiscall _SetEulerAngles_bCEulerAngles__QAEXABVbCAxisAngle___Z( bCEulerAngles *, bCAxisAngle const * );
// ?SetEulerAngles@bCEulerAngles@@QAEXABVbCMatrix@@@Z public: void __thiscall bCEulerAngles::SetEulerAngles(bCMatrix const &)
void __thiscall _SetEulerAngles_bCEulerAngles__QAEXABVbCMatrix___Z( bCEulerAngles *, bCMatrix const * );
// ?SetEulerAngles@bCEulerAngles@@QAEXABVbCQuaternion@@@Z public: void __thiscall bCEulerAngles::SetEulerAngles(bCQuaternion const &)
void __thiscall _SetEulerAngles_bCEulerAngles__QAEXABVbCQuaternion___Z( bCEulerAngles *, bCQuaternion const * );
// ?SetEulerAngles@bCEulerAngles@@QAEXMMM@Z public: void __thiscall bCEulerAngles::SetEulerAngles(float,float,float)
void __thiscall _SetEulerAngles_bCEulerAngles__QAEXMMM_Z( bCEulerAngles *, GEFloat, GEFloat, GEFloat );
// ?SetPitch@bCEulerAngles@@QAEXM@Z public: void __thiscall bCEulerAngles::SetPitch(float)
void __thiscall _SetPitch_bCEulerAngles__QAEXM_Z( bCEulerAngles *, GEFloat );
// ?SetRoll@bCEulerAngles@@QAEXM@Z public: void __thiscall bCEulerAngles::SetRoll(float)
void __thiscall _SetRoll_bCEulerAngles__QAEXM_Z( bCEulerAngles *, GEFloat );
// ?SetYaw@bCEulerAngles@@QAEXM@Z public: void __thiscall bCEulerAngles::SetYaw(float)
void __thiscall _SetYaw_bCEulerAngles__QAEXM_Z( bCEulerAngles *, GEFloat );
