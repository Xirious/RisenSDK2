struct bCRange1
{
    GEFloat m_fMin;
    GEFloat m_fMax;
};
// ??4bCRange1@@QAEAAV0@ABV0@@Z public: bCRange1 & __thiscall bCRange1::operator=(bCRange1 const &)
bCRange1 * __thiscall __4bCRange1__QAEAAV0_ABV0__Z( bCRange1 *, bCRange1 const * );
// ??5bCRange1@@QBEAAVbCOStream@@AAV1@@Z public: bCOStream & __thiscall bCRange1::operator>>(bCOStream &)const
bCOStream * __thiscall __5bCRange1__QBEAAVbCOStream__AAV1__Z( bCRange1 const *, bCOStream * );
// ??6bCRange1@@QAEAAVbCIStream@@AAV1@@Z public: bCIStream & __thiscall bCRange1::operator<<(bCIStream &)
bCIStream * __thiscall __6bCRange1__QAEAAVbCIStream__AAV1__Z( bCRange1 *, bCIStream * );
// ??8bCRange1@@QBE_NABV0@@Z public: bool __thiscall bCRange1::operator==(bCRange1 const &)const
GEBool __thiscall __8bCRange1__QBE_NABV0__Z( bCRange1 const *, bCRange1 const * );
// ??9bCRange1@@QBE_NABV0@@Z public: bool __thiscall bCRange1::operator!=(bCRange1 const &)const
GEBool __thiscall __9bCRange1__QBE_NABV0__Z( bCRange1 const *, bCRange1 const * );
// ?GetCenter@bCRange1@@QBEMXZ public: float __thiscall bCRange1::GetCenter(void)const
GEFloat __thiscall _GetCenter_bCRange1__QBEMXZ( bCRange1 const * );
// ?GetCenter@bCRange1@@QBEXAAM@Z public: void __thiscall bCRange1::GetCenter(float &)const
void __thiscall _GetCenter_bCRange1__QBEXAAM_Z( bCRange1 const *, GEFloat * );
// ?GetClamped@bCRange1@@QBEMM@Z public: float __thiscall bCRange1::GetClamped(float)const
GEFloat __thiscall _GetClamped_bCRange1__QBEMM_Z( bCRange1 const *, GEFloat );
// ?GetLerp@bCRange1@@QBEMM@Z public: float __thiscall bCRange1::GetLerp(float)const
GEFloat __thiscall _GetLerp_bCRange1__QBEMM_Z( bCRange1 const *, GEFloat );
// ?GetMagnitude@bCRange1@@QBEMXZ public: float __thiscall bCRange1::GetMagnitude(void)const
GEFloat __thiscall _GetMagnitude_bCRange1__QBEMXZ( bCRange1 const * );
// ?GetMagnitude@bCRange1@@QBEXAAM@Z public: void __thiscall bCRange1::GetMagnitude(float &)const
void __thiscall _GetMagnitude_bCRange1__QBEXAAM_Z( bCRange1 const *, GEFloat * );
// ?GetRandom@bCRange1@@QBEMXZ public: float __thiscall bCRange1::GetRandom(void)const
GEFloat __thiscall _GetRandom_bCRange1__QBEMXZ( bCRange1 const * );
// ?GetRandom@bCRange1@@QBEXAAM@Z public: void __thiscall bCRange1::GetRandom(float &)const
void __thiscall _GetRandom_bCRange1__QBEXAAM_Z( bCRange1 const *, GEFloat * );
// ?GetRandomInt@bCRange1@@QBEHXZ public: int __thiscall bCRange1::GetRandomInt(void)const
GEInt __thiscall _GetRandomInt_bCRange1__QBEHXZ( bCRange1 const * );
// ?GetRandomInt@bCRange1@@QBEXAAH@Z public: void __thiscall bCRange1::GetRandomInt(int &)const
void __thiscall _GetRandomInt_bCRange1__QBEXAAH_Z( bCRange1 const *, GEInt * );
// ?GetRelativePos@bCRange1@@QBEMM@Z public: float __thiscall bCRange1::GetRelativePos(float)const
GEFloat __thiscall _GetRelativePos_bCRange1__QBEMM_Z( bCRange1 const *, GEFloat );
// ?Normalize@bCRange1@@QAEXXZ public: void __thiscall bCRange1::Normalize(void)
void __thiscall _Normalize_bCRange1__QAEXXZ( bCRange1 * );
// ?SetAverageAndVariance@bCRange1@@QAEXMM@Z public: void __thiscall bCRange1::SetAverageAndVariance(float,float)
void __thiscall _SetAverageAndVariance_bCRange1__QAEXMM_Z( bCRange1 *, GEFloat, GEFloat );
// ?SetMinMax@bCRange1@@QAEXMM@Z public: void __thiscall bCRange1::SetMinMax(float,float)
void __thiscall _SetMinMax_bCRange1__QAEXMM_Z( bCRange1 *, GEFloat, GEFloat );
