enum bCPoint_bECoordinate : GEInt
{
    bCPoint_bECoordinate_X,
    bCPoint_bECoordinate_Y,
    bCPoint_bECoordinate_Count
};

struct bCPoint
{
    GEI32 m_i32X;
    GEI32 m_i32Y;
};
// ??0bCPoint@@QAE@ABUtagPOINT@@@Z public: __thiscall bCPoint::bCPoint(tagPOINT const &)
bCPoint * __thiscall __0bCPoint__QAE_ABUtagPOINT___Z( bCPoint *, bSPoint const * );
// ??0bCPoint@@QAE@ABV0@@Z public: __thiscall bCPoint::bCPoint(bCPoint const &)
bCPoint * __thiscall __0bCPoint__QAE_ABV0__Z( bCPoint *, bCPoint const * );
// ??0bCPoint@@QAE@JJ@Z public: __thiscall bCPoint::bCPoint(long,long)
bCPoint * __thiscall __0bCPoint__QAE_JJ_Z( bCPoint *, GEI32, GEI32 );
// ??0bCPoint@@QAE@XZ public: __thiscall bCPoint::bCPoint(void)
bCPoint * __thiscall __0bCPoint__QAE_XZ( bCPoint * );
// ??1bCPoint@@QAE@XZ public: __thiscall bCPoint::~bCPoint(void)
void __thiscall __1bCPoint__QAE_XZ( bCPoint * );
// ??4bCPoint@@QAEABV0@ABUtagPOINT@@@Z public: bCPoint const & __thiscall bCPoint::operator=(tagPOINT const &)
bCPoint const * __thiscall __4bCPoint__QAEABV0_ABUtagPOINT___Z( bCPoint *, bSPoint const * );
// ??4bCPoint@@QAEABV0@ABV0@@Z public: bCPoint const & __thiscall bCPoint::operator=(bCPoint const &)
bCPoint const * __thiscall __4bCPoint__QAEABV0_ABV0__Z( bCPoint *, bCPoint const * );
// ??5bCPoint@@QBEAAVbCOStream@@AAV1@@Z public: bCOStream & __thiscall bCPoint::operator>>(bCOStream &)const
bCOStream * __thiscall __5bCPoint__QBEAAVbCOStream__AAV1__Z( bCPoint const *, bCOStream * );
// ??6bCPoint@@QAEAAVbCIStream@@AAV1@@Z public: bCIStream & __thiscall bCPoint::operator<<(bCIStream &)
bCIStream * __thiscall __6bCPoint__QAEAAVbCIStream__AAV1__Z( bCPoint *, bCIStream * );
// ??8bCPoint@@QBE_NABV0@@Z public: bool __thiscall bCPoint::operator==(bCPoint const &)const
GEBool __thiscall __8bCPoint__QBE_NABV0__Z( bCPoint const  *, bCPoint const * );
// ??9bCPoint@@QBE_NABV0@@Z public: bool __thiscall bCPoint::operator!=(bCPoint const &)const
GEBool __thiscall __9bCPoint__QBE_NABV0__Z( bCPoint const *, bCPoint const * );
// ??AbCPoint@@QAEAAJH@Z public: long & __thiscall bCPoint::operator[](int)
GEI32 * __thiscall __AbCPoint__QAEAAJH_Z( bCPoint *, bCPoint_bECoordinate );
// ??AbCPoint@@QBEJH@Z public: long __thiscall bCPoint::operator[](int)const
GEI32 __thiscall __AbCPoint__QBEJH_Z( bCPoint const *, bCPoint_bECoordinate );
// ??BbCPoint@@QAEAAUtagPOINT@@XZ public: __thiscall bCPoint::operator tagPOINT &(void)
bSPoint * __thiscall __BbCPoint__QAEAAUtagPOINT__XZ( bCPoint * );
// ??BbCPoint@@QAEPAUtagPOINT@@XZ public: __thiscall bCPoint::operator tagPOINT *(void)
bSPoint * __thiscall __BbCPoint__QAEPAUtagPOINT__XZ( bCPoint * );
// ??BbCPoint@@QBEABUtagPOINT@@XZ public: __thiscall bCPoint::operator tagPOINT const &(void)const
bSPoint const * __thiscall __BbCPoint__QBEABUtagPOINT__XZ( bCPoint const * );
// ??BbCPoint@@QBEPBUtagPOINT@@XZ public: __thiscall bCPoint::operator tagPOINT const *(void)const
bSPoint const * __thiscall __BbCPoint__QBEPBUtagPOINT__XZ( bCPoint const * );
// ??DbCPoint@@QBE?AV0@M@Z public: bCPoint __thiscall bCPoint::operator*(float)const
bCPoint * __thiscall __DbCPoint__QBE_AV0_M_Z( bCPoint const *, bCPoint *, GEFloat );
// ??GbCPoint@@QBE?AV0@ABV0@@Z public: bCPoint __thiscall bCPoint::operator-(bCPoint const &)const
bCPoint * __thiscall __GbCPoint__QBE_AV0_ABV0__Z( bCPoint const *, bCPoint *, bCPoint const * );
// ??GbCPoint@@QBE?AV0@XZ public: bCPoint __thiscall bCPoint::operator-(void)const
bCPoint * __thiscall __GbCPoint__QBE_AV0_XZ( bCPoint const *, bCPoint * );
// ??HbCPoint@@QBE?AV0@ABV0@@Z public: bCPoint __thiscall bCPoint::operator+(bCPoint const &)const
bCPoint * __thiscall __HbCPoint__QBE_AV0_ABV0__Z( bCPoint const *, bCPoint *, bCPoint const * );
// ??HbCPoint@@QBEABV0@XZ public: bCPoint const & __thiscall bCPoint::operator+(void)const
bCPoint const * __thiscall __HbCPoint__QBEABV0_XZ( bCPoint const * );
// ??KbCPoint@@QBE?AV0@M@Z public: bCPoint __thiscall bCPoint::operator/(float)const
bCPoint * __thiscall __KbCPoint__QBE_AV0_M_Z( bCPoint const *, bCPoint *, GEFloat );
// ??XbCPoint@@QAEAAV0@M@Z public: bCPoint & __thiscall bCPoint::operator*=(float)
bCPoint * __thiscall __XbCPoint__QAEAAV0_M_Z( bCPoint *, GEFloat );
// ??YbCPoint@@QAEABV0@ABV0@@Z public: bCPoint const & __thiscall bCPoint::operator+=(bCPoint const &)
bCPoint const * __thiscall __YbCPoint__QAEABV0_ABV0__Z( bCPoint *, bCPoint const * );
// ??ZbCPoint@@QAEABV0@ABV0@@Z public: bCPoint const & __thiscall bCPoint::operator-=(bCPoint const &)
bCPoint const * __thiscall __ZbCPoint__QAEABV0_ABV0__Z( bCPoint *, bCPoint const * );
// ??_0bCPoint@@QAEAAV0@M@Z public: bCPoint & __thiscall bCPoint::operator/=(float)
bCPoint * __thiscall ___0bCPoint__QAEAAV0_M_Z( bCPoint *, GEFloat );
// ?AccessX@bCPoint@@QAEAAJXZ public: long & __thiscall bCPoint::AccessX(void)
GEI32 * __thiscall _AccessX_bCPoint__QAEAAJXZ( bCPoint * );
// ?AccessY@bCPoint@@QAEAAJXZ public: long & __thiscall bCPoint::AccessY(void)
GEI32 * __thiscall _AccessY_bCPoint__QAEAAJXZ( bCPoint * );
// ?Clear@bCPoint@@QAEXXZ public: void __thiscall bCPoint::Clear(void)
void __thiscall _Clear_bCPoint__QAEXXZ( bCPoint * );
// ?GetInvScaled@bCPoint@@QBE?AV1@M@Z public: bCPoint __thiscall bCPoint::GetInvScaled(float)const
bCPoint * __thiscall _GetInvScaled_bCPoint__QBE_AV1_M_Z( bCPoint const *, bCPoint *, GEFloat );
// ?GetScaled@bCPoint@@QBE?AV1@M@Z public: bCPoint __thiscall bCPoint::GetScaled(float)const
bCPoint * __thiscall _GetScaled_bCPoint__QBE_AV1_M_Z( bCPoint const *, bCPoint *, GEFloat );
// ?GetX@bCPoint@@QBEJXZ public: long __thiscall bCPoint::GetX(void)const
GEI32 __thiscall _GetX_bCPoint__QBEJXZ( bCPoint const * );
// ?GetX@bCPoint@@QBEXAAJ@Z public: void __thiscall bCPoint::GetX(long &)const
void __thiscall _GetX_bCPoint__QBEXAAJ_Z( bCPoint const *, GEI32 * );
// ?GetY@bCPoint@@QBEJXZ public: long __thiscall bCPoint::GetY(void)const
GEI32 __thiscall _GetY_bCPoint__QBEJXZ( bCPoint const * );
// ?GetY@bCPoint@@QBEXAAJ@Z public: void __thiscall bCPoint::GetY(long &)const
void __thiscall _GetY_bCPoint__QBEXAAJ_Z( bCPoint const *, GEI32 * );
// ?InvScale@bCPoint@@QAEXM@Z public: void __thiscall bCPoint::InvScale(float)
void __thiscall _InvScale_bCPoint__QAEXM_Z( bCPoint *, GEFloat );
// ?InvTranslate@bCPoint@@QAEXABV1@@Z public: void __thiscall bCPoint::InvTranslate(bCPoint const &)
void __thiscall _InvTranslate_bCPoint__QAEXABV1__Z( bCPoint *, bCPoint const * );
// ?InvTranslate@bCPoint@@QAEXJJ@Z public: void __thiscall bCPoint::InvTranslate(long,long)
void __thiscall _InvTranslate_bCPoint__QAEXJJ_Z( bCPoint *, GEI32, GEI32 );
// ?Scale@bCPoint@@QAEXM@Z public: void __thiscall bCPoint::Scale(float)
void __thiscall _Scale_bCPoint__QAEXM_Z( bCPoint *, GEFloat );
// ?SetPoint@bCPoint@@QAEXABUtagPOINT@@@Z public: void __thiscall bCPoint::SetPoint(tagPOINT const &)
void __thiscall _SetPoint_bCPoint__QAEXABUtagPOINT___Z( bCPoint *, bSPoint const * );
// ?SetPoint@bCPoint@@QAEXABV1@@Z public: void __thiscall bCPoint::SetPoint(bCPoint const &)
void __thiscall _SetPoint_bCPoint__QAEXABV1__Z( bCPoint *, bCPoint const * );
// ?SetPoint@bCPoint@@QAEXJJ@Z public: void __thiscall bCPoint::SetPoint(long,long)
void __thiscall _SetPoint_bCPoint__QAEXJJ_Z( bCPoint *, GEI32, GEI32 );
// ?SetX@bCPoint@@QAEXJ@Z public: void __thiscall bCPoint::SetX(long)
void __thiscall _SetX_bCPoint__QAEXJ_Z( bCPoint *, GEI32 );
// ?SetY@bCPoint@@QAEXJ@Z public: void __thiscall bCPoint::SetY(long)
void __thiscall _SetY_bCPoint__QAEXJ_Z( bCPoint *, GEI32 );
// ?Translate@bCPoint@@QAEXABV1@@Z public: void __thiscall bCPoint::Translate(bCPoint const &)
void __thiscall _Translate_bCPoint__QAEXABV1__Z( bCPoint *, bCPoint const * );
// ?Translate@bCPoint@@QAEXJJ@Z public: void __thiscall bCPoint::Translate(long,long)
void __thiscall _Translate_bCPoint__QAEXJJ_Z( bCPoint *, GEI32, GEI32 );
