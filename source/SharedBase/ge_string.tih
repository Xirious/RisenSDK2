struct bCUnicodeString;

struct bCString_bSStringData
{
    GEU32  m_u32Length;
    GEU32  m_u32RefCount;
    GEChar m_carrText[ 0 ];
};

struct bCString
{
    GELPChar m_pcText;
};
bTObjArray( bCString )
// ??0bCString@@QAE@ABV0@@Z public: __thiscall bCString::bCString(bCString const &)
bCString * __thiscall __0bCString__QAE_ABV0__Z( bCString *, bCString const * );
// ??0bCString@@QAE@ABV0@H@Z public: __thiscall bCString::bCString(bCString const &,int)
bCString * __thiscall __0bCString__QAE_ABV0_H_Z( bCString *, bCString const *, GEInt );
// ??0bCString@@QAE@ABVbCUnicodeString@@@Z public: __thiscall bCString::bCString(bCUnicodeString const &)
bCString * __thiscall __0bCString__QAE_ABVbCUnicodeString___Z( bCString *, bCUnicodeString const * );
// ??0bCString@@QAE@DH@Z public: __thiscall bCString::bCString(char,int)
bCString * __thiscall __0bCString__QAE_DH_Z( bCString *, GEChar, GEInt );
// ??0bCString@@QAE@MH@Z public: __thiscall bCString::bCString(float,int)
bCString * __thiscall __0bCString__QAE_MH_Z( bCString *, GEFloat, GEInt );
// ??0bCString@@QAE@PBD@Z public: __thiscall bCString::bCString(char const *)
bCString * __thiscall __0bCString__QAE_PBD_Z( bCString *, GELPCChar );
// ??0bCString@@QAE@PBDH@Z public: __thiscall bCString::bCString(char const *,int)
bCString * __thiscall __0bCString__QAE_PBDH_Z( bCString *, GELPCChar, GEInt );
// ??0bCString@@QAE@XZ public: __thiscall bCString::bCString(void)
bCString * __thiscall __0bCString__QAE_XZ( bCString * );
// ??1bCString@@QAE@XZ public: __thiscall bCString::~bCString(void)
void __thiscall __1bCString__QAE_XZ( bCString * );
// ??4bCString@@QAEAAV0@ABV0@@Z public: bCString & __thiscall bCString::operator=(bCString const &)
bCString * __thiscall __4bCString__QAEAAV0_ABV0__Z( bCString *, bCString const * );
// ??4bCString@@QAEAAV0@D@Z public: bCString & __thiscall bCString::operator=(char)
bCString * __thiscall __4bCString__QAEAAV0_D_Z( bCString *, GEChar );
// ??4bCString@@QAEAAV0@PBD@Z public: bCString & __thiscall bCString::operator=(char const *)
bCString * __thiscall __4bCString__QAEAAV0_PBD_Z( bCString *, GELPCChar );
// ??8bCString@@QBE_NABV0@@Z public: bool __thiscall bCString::operator==(bCString const &)const
GEBool __thiscall __8bCString__QBE_NABV0__Z( bCString const *, bCString const * );
// ??8bCString@@QBE_NPBD@Z public: bool __thiscall bCString::operator==(char const *)const
GEBool __thiscall __8bCString__QBE_NPBD_Z( bCString const *, GELPCChar );
// ??9bCString@@QBE_NABV0@@Z public: bool __thiscall bCString::operator!=(bCString const &)const
GEBool __thiscall __9bCString__QBE_NABV0__Z( bCString const *, bCString const * );
// ??9bCString@@QBE_NPBD@Z public: bool __thiscall bCString::operator!=(char const *)const
GEBool __thiscall __9bCString__QBE_NPBD_Z( bCString const *, GELPCChar );
// ??AbCString@@QAEAADH@Z public: char & __thiscall bCString::operator[](int)
GEChar * __thiscall __AbCString__QAEAADH_Z( bCString *, GEInt );
// ??AbCString@@QBEDH@Z public: char __thiscall bCString::operator[](int)const
GEChar __thiscall __AbCString__QBEDH_Z( bCString const *, GEInt );
// ??BbCString@@QBEPBDXZ public: __thiscall bCString::operator char const *(void)const
GELPCChar __thiscall __BbCString__QBEPBDXZ( bCString const * );
// ??HbCString@@QBE?AV0@ABV0@@Z public: bCString __thiscall bCString::operator+(bCString const &)const
bCString * __thiscall __HbCString__QBE_AV0_ABV0__Z( bCString const *, bCString *, bCString const * );
// ??HbCString@@QBE?AV0@D@Z public: bCString __thiscall bCString::operator+(char)const
bCString * __thiscall __HbCString__QBE_AV0_D_Z( bCString const *, bCString *, GEChar );
// ??HbCString@@QBE?AV0@PBD@Z public: bCString __thiscall bCString::operator+(char const *)const
bCString * __thiscall __HbCString__QBE_AV0_PBD_Z( bCString const *, bCString *, GELPCChar );
// ??MbCString@@QBE_NABV0@@Z public: bool __thiscall bCString::operator<(bCString const &)const
GEBool __thiscall __MbCString__QBE_NABV0__Z( bCString const *, bCString const * );
// ??MbCString@@QBE_NPBD@Z public: bool __thiscall bCString::operator<(char const *)const
GEBool __thiscall __MbCString__QBE_NPBD_Z( bCString const *, GELPCChar );
// ??NbCString@@QBE_NABV0@@Z public: bool __thiscall bCString::operator<=(bCString const &)const
GEBool __thiscall __NbCString__QBE_NABV0__Z( bCString const *, bCString const * );
// ??NbCString@@QBE_NPBD@Z public: bool __thiscall bCString::operator<=(char const *)const
GEBool __thiscall __NbCString__QBE_NPBD_Z( bCString const *, GELPCChar );
// ??ObCString@@QBE_NABV0@@Z public: bool __thiscall bCString::operator>(bCString const &)const
GEBool __thiscall __ObCString__QBE_NABV0__Z( bCString const *, bCString const * );
// ??ObCString@@QBE_NPBD@Z public: bool __thiscall bCString::operator>(char const *)const
GEBool __thiscall __ObCString__QBE_NPBD_Z( bCString const *, GELPCChar );
// ??PbCString@@QBE_NABV0@@Z public: bool __thiscall bCString::operator>=(bCString const &)const
GEBool __thiscall __PbCString__QBE_NABV0__Z( bCString const *, bCString const * );
// ??PbCString@@QBE_NPBD@Z public: bool __thiscall bCString::operator>=(char const *)const
GEBool __thiscall __PbCString__QBE_NPBD_Z( bCString const *, GELPCChar );
// ??YbCString@@QAEAAV0@ABV0@@Z public: bCString & __thiscall bCString::operator+=(bCString const &)
bCString * __thiscall __YbCString__QAEAAV0_ABV0__Z( bCString *, bCString const * );
// ??YbCString@@QAEAAV0@D@Z public: bCString & __thiscall bCString::operator+=(char)
bCString * __thiscall __YbCString__QAEAAV0_D_Z( bCString *, GEChar );
// ??YbCString@@QAEAAV0@PBD@Z public: bCString & __thiscall bCString::operator+=(char const *)
bCString * __thiscall __YbCString__QAEAAV0_PBD_Z( bCString *, GELPCChar );
// ?Alloc@bCString@@IAEXH@Z protected: void __thiscall bCString::Alloc(int)
void __thiscall _Alloc_bCString__IAEXH_Z( bCString *, GEInt );
// ?Clear@bCString@@QAEXXZ public: void __thiscall bCString::Clear(void)
void __thiscall _Clear_bCString__QAEXXZ( bCString * );
// ?Compare@bCString@@QBEHABV1@@Z public: int __thiscall bCString::Compare(bCString const &)const
GEInt __thiscall _Compare_bCString__QBEHABV1__Z( bCString const *, bCString const * );
// ?Compare@bCString@@QBEHPBD@Z public: int __thiscall bCString::Compare(char const *)const
GEInt __thiscall _Compare_bCString__QBEHPBD_Z( bCString const *, GELPCChar );
// ?CompareFast@bCString@@QBE_NABV1@@Z public: bool __thiscall bCString::CompareFast(bCString const &)const
GEBool __thiscall _CompareFast_bCString__QBE_NABV1__Z( bCString const *, bCString const * );
// ?CompareNoCase@bCString@@QBEHABV1@@Z public: int __thiscall bCString::CompareNoCase(bCString const &)const
GEInt __thiscall _CompareNoCase_bCString__QBEHABV1__Z( bCString const *, bCString const * );
// ?CompareNoCase@bCString@@QBEHPBD@Z public: int __thiscall bCString::CompareNoCase(char const *)const
GEInt __thiscall _CompareNoCase_bCString__QBEHPBD_Z( bCString const *, GELPCChar );
// ?CompareNoCaseFast@bCString@@QBE_NABV1@@Z public: bool __thiscall bCString::CompareNoCaseFast(bCString const &)const
GEBool __thiscall _CompareNoCaseFast_bCString__QBE_NABV1__Z( bCString const *, bCString const * );
// ?ConcatCopy@bCString@@IAEXPBDH0H@Z protected: void __thiscall bCString::ConcatCopy(char const *,int,char const *,int)
void __thiscall _ConcatCopy_bCString__IAEXPBDH0H_Z( bCString *, GELPCChar, GEInt, GELPCChar, GEInt );
// ?ConcatInPlace@bCString@@IAEXPBDH@Z protected: void __thiscall bCString::ConcatInPlace(char const *,int)
void __thiscall _ConcatInPlace_bCString__IAEXPBDH_Z( bCString *, GELPCChar, GEInt );
// ?Contains@bCString@@QBE_NDH@Z public: bool __thiscall bCString::Contains(char,int)const
GEBool __thiscall _Contains_bCString__QBE_NDH_Z( bCString const *, GEChar, GEInt );
// ?Contains@bCString@@QBE_NPBDH@Z public: bool __thiscall bCString::Contains(char const *,int)const
GEBool __thiscall _Contains_bCString__QBE_NPBDH_Z( bCString const *, GELPCChar, GEInt );
// ?ContainsOneOf@bCString@@QBE_NPBDH@Z public: bool __thiscall bCString::ContainsOneOf(char const *,int)const
GEBool __thiscall _ContainsOneOf_bCString__QBE_NPBDH_Z( bCString const *, GELPCChar, GEInt );
// ?CopyBeforeWrite@bCString@@IAEXXZ protected: void __thiscall bCString::CopyBeforeWrite(void)
void __thiscall _CopyBeforeWrite_bCString__IAEXXZ( bCString * );
// ?CopyUnicode@bCString@@IAEXPB_WH@Z protected: void __thiscall bCString::CopyUnicode(wchar_t const *,int)
void __thiscall _CopyUnicode_bCString__IAEXPB_WH_Z( bCString *, GELPCUnicodeChar, GEInt );
// ?CountWords@bCString@@QBEHABV1@@Z public: int __thiscall bCString::CountWords(bCString const &)const
GEInt __thiscall _CountWords_bCString__QBEHABV1__Z( bCString const *, bCString const * );
// ?Decrement@bCString@@KGHPAUbSStringData@1@@Z protected: static int __stdcall bCString::Decrement(bCString::bSStringData *)
GEInt __stdcall _Decrement_bCString__KGHPAUbSStringData_1__Z( bCString_bSStringData * );
// ?Delete@bCString@@QAEHHH@Z public: int __thiscall bCString::Delete(int,int)
GEInt __thiscall _Delete_bCString__QAEHHH_Z( bCString *, GEInt, GEInt );
// ?Find@bCString@@QBEHDH_N@Z public: int __thiscall bCString::Find(char,int,bool)const
GEInt __thiscall _Find_bCString__QBEHDH_N_Z( bCString const *, GEChar, GEInt, GEBool );
// ?Find@bCString@@QBEHPBDH_N@Z public: int __thiscall bCString::Find(char const *,int,bool)const
GEInt __thiscall _Find_bCString__QBEHPBDH_N_Z( bCString const *, GELPCChar, GEInt, GEBool );
// ?FindNoCase@bCString@@QBEHPBDH@Z public: int __thiscall bCString::FindNoCase(char const *,int)const
GEInt __thiscall _FindNoCase_bCString__QBEHPBDH_Z( bCString const *, GELPCChar, GEInt );
// ?FindNoiseChar@bCString@@QBEHH_N@Z public: int __thiscall bCString::FindNoiseChar(int,bool)const
GEInt __thiscall _FindNoiseChar_bCString__QBEHH_N_Z( bCString const *, GEInt, GEBool );
// ?FindNumericalChar@bCString@@QBEHH_N@Z public: int __thiscall bCString::FindNumericalChar(int,bool)const
GEInt __thiscall _FindNumericalChar_bCString__QBEHH_N_Z( bCString const *, GEInt, GEBool );
// ?FindOneOf@bCString@@QBEHPBDH@Z public: int __thiscall bCString::FindOneOf(char const *,int)const
GEInt __thiscall _FindOneOf_bCString__QBEHPBDH_Z( bCString const *, GELPCChar, GEInt );
// ?Format@bCString@@QAA_NPBDZZ public: bool __cdecl bCString::Format(char const *,...)
GEBool __cdecl _Format_bCString__QAA_NPBDZZ( bCString *, GELPCChar, ... );
// ?FreeData@bCString@@KGXPAUbSStringData@1@@Z protected: static void __stdcall bCString::FreeData(bCString::bSStringData *)
void __stdcall _FreeData_bCString__KGXPAUbSStringData_1__Z( bCString_bSStringData * );
// ?FreeExtra@bCString@@QAEXXZ public: void __thiscall bCString::FreeExtra(void)
void __thiscall _FreeExtra_bCString__QAEXXZ( bCString * );
// ?GetAllocLength@bCString@@QBEHXZ public: int __thiscall bCString::GetAllocLength(void)const
GEInt __thiscall _GetAllocLength_bCString__QBEHXZ( bCString const * );
// ?GetAt@bCString@@QBEDH_N@Z public: char __thiscall bCString::GetAt(int,bool)const
GEChar __thiscall _GetAt_bCString__QBEDH_N_Z( bCString const *, GEInt, GEBool );
// ?GetBool@bCString@@QBE_NXZ public: bool __thiscall bCString::GetBool(void)const
GEBool __thiscall _GetBool_bCString__QBE_NXZ( bCString const * );
// ?GetBuffer@bCString@@QAEPADH@Z public: char * __thiscall bCString::GetBuffer(int)
GELPChar __thiscall _GetBuffer_bCString__QAEPADH_Z( bCString *, GEInt );
// ?GetBufferSetLength@bCString@@QAEPADH@Z public: char * __thiscall bCString::GetBufferSetLength(int)
GELPChar __thiscall _GetBufferSetLength_bCString__QAEPADH_Z( bCString *, GEInt );
// ?GetData@bCString@@IBEPAUbSStringData@1@XZ protected: bCString::bSStringData * __thiscall bCString::GetData(void)const
bCString_bSStringData * __thiscall _GetData_bCString__IBEPAUbSStringData_1_XZ( bCString const * );
// ?GetDouble@bCString@@QBENH@Z public: double __thiscall bCString::GetDouble(int)const
GEDouble __thiscall _GetDouble_bCString__QBENH_Z( bCString const *, GEInt );
// ?GetFloat@bCString@@QBEMH@Z public: float __thiscall bCString::GetFloat(int)const
GEFloat __thiscall _GetFloat_bCString__QBEMH_Z( bCString const *, GEInt );
// ?GetFormattedString@bCString@@SA?AV1@PBDZZ public: static bCString __cdecl bCString::GetFormattedString(char const *,...)
bCString * __cdecl _GetFormattedString_bCString__SA_AV1_PBDZZ( GELPCChar, ... );
// ?GetI64@bCString@@QBE_JH@Z public: __int64 __thiscall bCString::GetI64(int)const
GEI64 __thiscall _GetI64_bCString__QBE_JH_Z( bCString const *, GEInt );
// ?GetInteger@bCString@@QBEHH_N@Z public: int __thiscall bCString::GetInteger(int,bool)const
GEInt __thiscall _GetInteger_bCString__QBEHH_N_Z( bCString const *, GEInt, GEBool );
// ?GetLength@bCString@@QBEHXZ public: int __thiscall bCString::GetLength(void)const
GEInt __thiscall _GetLength_bCString__QBEHXZ( bCString const * );
// ?GetRefCount@bCString@@IBEHXZ protected: int __thiscall bCString::GetRefCount(void)const
GEInt __thiscall _GetRefCount_bCString__IBEHXZ( bCString const * );
// ?GetText@bCString@@QBEPBDXZ public: char const * __thiscall bCString::GetText(void)const
GELPCChar __thiscall _GetText_bCString__QBEPBDXZ( bCString const * );
// ?GetUnicodeText@bCString@@QBE?AVbCUnicodeString@@XZ public: bCUnicodeString __thiscall bCString::GetUnicodeText(void)const
bCUnicodeString * __thiscall _GetUnicodeText_bCString__QBE_AVbCUnicodeString__XZ( bCString const *, bCUnicodeString * );
// ?GetWord@bCString@@QBEHHABV1@AAV1@_N2@Z public: int __thiscall bCString::GetWord(int,bCString const &,bCString &,bool,bool)const
GEInt __thiscall _GetWord_bCString__QBEHHABV1_AAV1__N2_Z( bCString const *, GEInt, bCString const *, bCString *, GEBool, GEBool );
// ?Increment@bCString@@KGXPAUbSStringData@1@@Z protected: static void __stdcall bCString::Increment(bCString::bSStringData *)
void __stdcall _Increment_bCString__KGXPAUbSStringData_1__Z( bCString_bSStringData * );
// ?Insert@bCString@@QAEHHABV1@@Z public: int __thiscall bCString::Insert(int,bCString const &)
GEInt __thiscall _Insert_bCString__QAEHHABV1__Z( bCString *, GEInt, bCString const * );
// ?Insert@bCString@@QAEHHD@Z public: int __thiscall bCString::Insert(int,char)
GEInt __thiscall _Insert_bCString__QAEHHD_Z( bCString *, GEInt, GEChar );
// ?Insert@bCString@@QAEHHPBD@Z public: int __thiscall bCString::Insert(int,char const *)
GEInt __thiscall _Insert_bCString__QAEHHPBD_Z( bCString *, GEInt, GELPCChar );
// ?IsEmpty@bCString@@QBE_NXZ public: bool __thiscall bCString::IsEmpty(void)const
GEBool __thiscall _IsEmpty_bCString__QBE_NXZ( bCString const * );
// ?Left@bCString@@QBE?AV1@H@Z public: bCString __thiscall bCString::Left(int)const
bCString * __thiscall _Left_bCString__QBE_AV1_H_Z( bCString const *, bCString *, GEInt );
// ?LockBuffer@bCString@@QAEPADXZ public: char * __thiscall bCString::LockBuffer(void)
GELPChar __thiscall _LockBuffer_bCString__QAEPADXZ( bCString * );
// ?MakeLower@bCString@@QAEAAV1@XZ public: bCString & __thiscall bCString::MakeLower(void)
bCString * __thiscall _MakeLower_bCString__QAEAAV1_XZ( bCString * );
// ?MakeReverse@bCString@@QAEXXZ public: void __thiscall bCString::MakeReverse(void)
void __thiscall _MakeReverse_bCString__QAEXXZ( bCString * );
// ?MakeUpper@bCString@@QAEAAV1@XZ public: bCString & __thiscall bCString::MakeUpper(void)
bCString * __thiscall _MakeUpper_bCString__QAEAAV1_XZ( bCString * );
// ?Mid@bCString@@QBE?AV1@H@Z public: bCString __thiscall bCString::Mid(int)const
bCString * __thiscall _Mid_bCString__QBE_AV1_H_Z( bCString const *, bCString *, GEInt );
// ?Mid@bCString@@QBE?AV1@HH@Z public: bCString __thiscall bCString::Mid(int,int)const
bCString * __thiscall _Mid_bCString__QBE_AV1_HH_Z( bCString const *, bCString *, GEInt, GEInt );
// ?Realloc@bCString@@IAEXH@Z protected: void __thiscall bCString::Realloc(int)
void __thiscall _Realloc_bCString__IAEXH_Z( bCString *, GEInt );
// ?Release@bCString@@IAEXXZ protected: void __thiscall bCString::Release(void)
void __thiscall _Release_bCString__IAEXXZ( bCString * );
// ?Release@bCString@@KGXPAUbSStringData@1@@Z protected: static void __stdcall bCString::Release(bCString::bSStringData *)
void __stdcall _Release_bCString__KGXPAUbSStringData_1__Z( bCString_bSStringData * );
// ?ReleaseBuffer@bCString@@QAEXH@Z public: void __thiscall bCString::ReleaseBuffer(int)
void __thiscall _ReleaseBuffer_bCString__QAEXH_Z( bCString *, GEInt );
// ?Remove@bCString@@QAEHABV1@@Z public: int __thiscall bCString::Remove(bCString const &)
GEInt __thiscall _Remove_bCString__QAEHABV1__Z( bCString *, bCString const * );
// ?Remove@bCString@@QAEHD@Z public: int __thiscall bCString::Remove(char)
GEInt __thiscall _Remove_bCString__QAEHD_Z( bCString *, GEChar );
// ?Remove@bCString@@QAEHPBD@Z public: int __thiscall bCString::Remove(char const *)
GEInt __thiscall _Remove_bCString__QAEHPBD_Z( bCString *, GELPCChar );
// ?Replace@bCString@@QAEHDD@Z public: int __thiscall bCString::Replace(char,char)
GEInt __thiscall _Replace_bCString__QAEHDD_Z( bCString *, GEChar, GEChar );
// ?Replace@bCString@@QAEHPBD0@Z public: int __thiscall bCString::Replace(char const *,char const *)
GEInt __thiscall _Replace_bCString__QAEHPBD0_Z( bCString *, GELPCChar, GELPCChar );
// ?ReverseFind@bCString@@QBEHD@Z public: int __thiscall bCString::ReverseFind(char)const
GEInt __thiscall _ReverseFind_bCString__QBEHD_Z( bCString const *, GEChar );
// ?ReverseFind@bCString@@QBEHDH@Z public: int __thiscall bCString::ReverseFind(char,int)const
GEInt __thiscall _ReverseFind_bCString__QBEHDH_Z( bCString const *, GEChar, GEInt );
// ?ReverseFind@bCString@@QBEHPBD@Z public: int __thiscall bCString::ReverseFind(char const *)const
GEInt __thiscall _ReverseFind_bCString__QBEHPBD_Z( bCString const *, GELPCChar );
// ?ReverseFind@bCString@@QBEHPBDH@Z public: int __thiscall bCString::ReverseFind(char const *,int)const
GEInt __thiscall _ReverseFind_bCString__QBEHPBDH_Z( bCString const *, GELPCChar, GEInt );
// ?ReverseFindOneOf@bCString@@QBEHPBD@Z public: int __thiscall bCString::ReverseFindOneOf(char const *)const
GEInt __thiscall _ReverseFindOneOf_bCString__QBEHPBD_Z( bCString const *, GELPCChar );
// ?ReverseFindOneOf@bCString@@QBEHPBDH@Z public: int __thiscall bCString::ReverseFindOneOf(char const *,int)const
GEInt __thiscall _ReverseFindOneOf_bCString__QBEHPBDH_Z( bCString const *, GELPCChar, GEInt );
// ?Right@bCString@@QBE?AV1@H@Z public: bCString __thiscall bCString::Right(int)const
bCString * __thiscall _Right_bCString__QBE_AV1_H_Z( bCString const *, bCString *, GEInt );
// ?Scan@bCString@@QBAHPBDZZ public: int __cdecl bCString::Scan(char const *,...)const
GEInt __cdecl _Scan_bCString__QBAHPBDZZ( bCString const *, GELPCChar, ... );
// ?SetAt@bCString@@QAEXHD@Z public: void __thiscall bCString::SetAt(int,char)
void __thiscall _SetAt_bCString__QAEXHD_Z( bCString *, GEInt, GEChar );
// ?SetText@bCString@@QAEXABV1@@Z public: void __thiscall bCString::SetText(bCString const &)
void __thiscall _SetText_bCString__QAEXABV1__Z( bCString *, bCString const * );
// ?SetText@bCString@@QAEXABV1@H@Z public: void __thiscall bCString::SetText(bCString const &,int)
void __thiscall _SetText_bCString__QAEXABV1_H_Z( bCString *, bCString const *, GEInt );
// ?SetText@bCString@@QAEXDH@Z public: void __thiscall bCString::SetText(char,int)
void __thiscall _SetText_bCString__QAEXDH_Z( bCString *, GEChar, GEInt );
// ?SetText@bCString@@QAEXPBD@Z public: void __thiscall bCString::SetText(char const *)
void __thiscall _SetText_bCString__QAEXPBD_Z( bCString *, GELPCChar );
// ?SetText@bCString@@QAEXPBDH@Z public: void __thiscall bCString::SetText(char const *,int)
void __thiscall _SetText_bCString__QAEXPBDH_Z( bCString *, GELPCChar, GEInt );
// ?SetUnicodeText@bCString@@QAEXABVbCUnicodeString@@@Z public: void __thiscall bCString::SetUnicodeText(bCUnicodeString const &)
void __thiscall _SetUnicodeText_bCString__QAEXABVbCUnicodeString___Z( bCString *, bCUnicodeString const * );
// ?SetUnicodeText@bCString@@QAEXABVbCUnicodeString@@H@Z public: void __thiscall bCString::SetUnicodeText(bCUnicodeString const &,int)
void __thiscall _SetUnicodeText_bCString__QAEXABVbCUnicodeString__H_Z( bCString *, bCUnicodeString const *, GEInt );
// ?SetUnicodeText@bCString@@QAEXPB_W@Z public: void __thiscall bCString::SetUnicodeText(wchar_t const *)
void __thiscall _SetUnicodeText_bCString__QAEXPB_W_Z( bCString *, GELPCUnicodeChar );
// ?SetUnicodeText@bCString@@QAEXPB_WH@Z public: void __thiscall bCString::SetUnicodeText(wchar_t const *,int)
void __thiscall _SetUnicodeText_bCString__QAEXPB_WH_Z( bCString *, GELPCUnicodeChar, GEInt );
// ?SpanExcluding@bCString@@QBE?AV1@PBD@Z public: bCString __thiscall bCString::SpanExcluding(char const *)const
bCString * __thiscall _SpanExcluding_bCString__QBE_AV1_PBD_Z( bCString const *, bCString *, GELPCChar );
// ?SpanIncluding@bCString@@QBE?AV1@PBD@Z public: bCString __thiscall bCString::SpanIncluding(char const *)const
bCString * __thiscall _SpanIncluding_bCString__QBE_AV1_PBD_Z( bCString const *, bCString *, GELPCChar );
// ?ToLower@bCString@@QAEXXZ public: void __thiscall bCString::ToLower(void)
void __thiscall _ToLower_bCString__QAEXXZ( bCString * );
// ?ToUpper@bCString@@QAEXXZ public: void __thiscall bCString::ToUpper(void)
void __thiscall _ToUpper_bCString__QAEXXZ( bCString * );
// ?Trim@bCString@@QAEXD@Z public: void __thiscall bCString::Trim(char)
void __thiscall _Trim_bCString__QAEXD_Z( bCString *, GEChar );
// ?Trim@bCString@@QAEXPBD@Z public: void __thiscall bCString::Trim(char const *)
void __thiscall _Trim_bCString__QAEXPBD_Z( bCString *, GELPCChar );
// ?Trim@bCString@@QAEXXZ public: void __thiscall bCString::Trim(void)
void __thiscall _Trim_bCString__QAEXXZ( bCString * );
// ?Trim@bCString@@QAEX_N0@Z public: void __thiscall bCString::Trim(bool,bool)
void __thiscall _Trim_bCString__QAEX_N0_Z( bCString *, GEBool, GEBool );
// ?TrimLeft@bCString@@QAEXD@Z public: void __thiscall bCString::TrimLeft(char)
void __thiscall _TrimLeft_bCString__QAEXD_Z( bCString *, GEChar );
// ?TrimLeft@bCString@@QAEXPBD@Z public: void __thiscall bCString::TrimLeft(char const *)
void __thiscall _TrimLeft_bCString__QAEXPBD_Z( bCString *, GELPCChar );
// ?TrimLeft@bCString@@QAEXXZ public: void __thiscall bCString::TrimLeft(void)
void __thiscall _TrimLeft_bCString__QAEXXZ( bCString * );
// ?TrimRight@bCString@@QAEXD@Z public: void __thiscall bCString::TrimRight(char)
void __thiscall _TrimRight_bCString__QAEXD_Z( bCString *, GEChar );
// ?TrimRight@bCString@@QAEXPBD@Z public: void __thiscall bCString::TrimRight(char const *)
void __thiscall _TrimRight_bCString__QAEXPBD_Z( bCString *, GELPCChar );
// ?TrimRight@bCString@@QAEXXZ public: void __thiscall bCString::TrimRight(void)
void __thiscall _TrimRight_bCString__QAEXXZ( bCString * );
// ?UnlockBuffer@bCString@@QAEXXZ public: void __thiscall bCString::UnlockBuffer(void)
void __thiscall _UnlockBuffer_bCString__QAEXXZ( bCString * );

// ??8@YG_NPBDABVbCString@@@Z bool __stdcall operator==(char const *,bCString const &)
GEBool __stdcall __8_YG_NPBDABVbCString___Z( GELPCChar, bCString const * );
// ??9@YG_NPBDABVbCString@@@Z bool __stdcall operator!=(char const *,bCString const &)
GEBool __stdcall __9_YG_NPBDABVbCString___Z( GELPCChar, bCString const * );
// ??H@YG?AVbCString@@DABV0@@Z bCString __stdcall operator+(char,bCString const &)
bCString * __stdcall __H_YG_AVbCString__DABV0__Z( bCString *, GEChar, bCString const * );
// ??H@YG?AVbCString@@PBDABV0@@Z bCString __stdcall operator+(char const *,bCString const &)
bCString * __stdcall __H_YG_AVbCString__PBDABV0__Z( bCString *, GELPCChar, bCString const * );
// ??M@YG_NPBDABVbCString@@@Z bool __stdcall operator<(char const *,bCString const &)
GEBool __stdcall __M_YG_NPBDABVbCString___Z( GELPCChar, bCString const * );
// ??N@YG_NPBDABVbCString@@@Z bool __stdcall operator<=(char const *,bCString const &)
GEBool __stdcall __N_YG_NPBDABVbCString___Z( GELPCChar, bCString const * );
// ??O@YG_NPBDABVbCString@@@Z bool __stdcall operator>(char const *,bCString const &)
GEBool __stdcall __O_YG_NPBDABVbCString___Z( GELPCChar, bCString const * );
// ??P@YG_NPBDABVbCString@@@Z bool __stdcall operator>=(char const *,bCString const &)
GEBool __stdcall __P_YG_NPBDABVbCString___Z( GELPCChar, bCString const * );

bCString DLLIMPORT g_strDefault;
