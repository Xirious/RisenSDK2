struct bCInfDoubleCylinder
{
    bCInfCylinder m_A;
    bCInfCylinder m_B;
};
// ??0bCInfDoubleCylinder@@QAE@ABV0@@Z public: __thiscall bCInfDoubleCylinder::bCInfDoubleCylinder(bCInfDoubleCylinder const &)
bCInfDoubleCylinder * __thiscall __0bCInfDoubleCylinder__QAE_ABV0__Z( bCInfDoubleCylinder *, bCInfDoubleCylinder const * );
// ??0bCInfDoubleCylinder@@QAE@ABVbCVector@@M0M@Z public: __thiscall bCInfDoubleCylinder::bCInfDoubleCylinder(bCVector const &,float,bCVector const &,float)
bCInfDoubleCylinder * __thiscall __0bCInfDoubleCylinder__QAE_ABVbCVector__M0M_Z( bCInfDoubleCylinder *, bCVector const *, GEFloat, bCVector const *, GEFloat );
// ??0bCInfDoubleCylinder@@QAE@XZ public: __thiscall bCInfDoubleCylinder::bCInfDoubleCylinder(void)
bCInfDoubleCylinder * __thiscall __0bCInfDoubleCylinder__QAE_XZ( bCInfDoubleCylinder * );
// ??1bCInfDoubleCylinder@@QAE@XZ public: __thiscall bCInfDoubleCylinder::~bCInfDoubleCylinder(void)
void __thiscall __1bCInfDoubleCylinder__QAE_XZ( bCInfDoubleCylinder * );
// ??4bCInfDoubleCylinder@@QAEABV0@ABV0@@Z public: bCInfDoubleCylinder const & __thiscall bCInfDoubleCylinder::operator=(bCInfDoubleCylinder const &)
bCInfDoubleCylinder const * __thiscall __4bCInfDoubleCylinder__QAEABV0_ABV0__Z( bCInfDoubleCylinder *, bCInfDoubleCylinder const * );
// ??5bCInfDoubleCylinder@@QBEAAVbCOStream@@AAV1@@Z public: bCOStream & __thiscall bCInfDoubleCylinder::operator>>(bCOStream &)const
bCOStream * __thiscall __5bCInfDoubleCylinder__QBEAAVbCOStream__AAV1__Z( bCInfDoubleCylinder const *, bCOStream * );
// ??6bCInfDoubleCylinder@@QAEAAVbCIStream@@AAV1@@Z public: bCIStream & __thiscall bCInfDoubleCylinder::operator<<(bCIStream &)
bCIStream * __thiscall __6bCInfDoubleCylinder__QAEAAVbCIStream__AAV1__Z( bCInfDoubleCylinder *, bCIStream * );
// ??8bCInfDoubleCylinder@@QBE_NABV0@@Z public: bool __thiscall bCInfDoubleCylinder::operator==(bCInfDoubleCylinder const &)const
GEBool __thiscall __8bCInfDoubleCylinder__QBE_NABV0__Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder const * );
// ??9bCInfDoubleCylinder@@QBE_NABV0@@Z public: bool __thiscall bCInfDoubleCylinder::operator!=(bCInfDoubleCylinder const &)const
GEBool __thiscall __9bCInfDoubleCylinder__QBE_NABV0__Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder const * );
// ??DbCInfDoubleCylinder@@QBE?AV0@ABVbCMatrix3@@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::operator*(bCMatrix3 const &)const
bCInfDoubleCylinder * __thiscall __DbCInfDoubleCylinder__QBE_AV0_ABVbCMatrix3___Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCMatrix3 const * );
// ??DbCInfDoubleCylinder@@QBE?AV0@ABVbCMatrix@@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::operator*(bCMatrix const &)const
bCInfDoubleCylinder * __thiscall __DbCInfDoubleCylinder__QBE_AV0_ABVbCMatrix___Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCMatrix const * );
// ??DbCInfDoubleCylinder@@QBE?AV0@M@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::operator*(float)const
bCInfDoubleCylinder * __thiscall __DbCInfDoubleCylinder__QBE_AV0_M_Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, GEFloat );
// ??GbCInfDoubleCylinder@@QBE?AV0@ABVbCVector@@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::operator-(bCVector const &)const
bCInfDoubleCylinder * __thiscall __GbCInfDoubleCylinder__QBE_AV0_ABVbCVector___Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCVector const * );
// ??HbCInfDoubleCylinder@@QBE?AV0@ABVbCVector@@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::operator+(bCVector const &)const
bCInfDoubleCylinder * __thiscall __HbCInfDoubleCylinder__QBE_AV0_ABVbCVector___Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCVector const * );
// ??KbCInfDoubleCylinder@@QBE?AV0@M@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::operator/(float)const
bCInfDoubleCylinder * __thiscall __KbCInfDoubleCylinder__QBE_AV0_M_Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, GEFloat );
// ??XbCInfDoubleCylinder@@QAEAAV0@ABVbCMatrix3@@@Z public: bCInfDoubleCylinder & __thiscall bCInfDoubleCylinder::operator*=(bCMatrix3 const &)
bCInfDoubleCylinder * __thiscall __XbCInfDoubleCylinder__QAEAAV0_ABVbCMatrix3___Z( bCInfDoubleCylinder *, bCMatrix3 const * );
// ??XbCInfDoubleCylinder@@QAEAAV0@ABVbCMatrix@@@Z public: bCInfDoubleCylinder & __thiscall bCInfDoubleCylinder::operator*=(bCMatrix const &)
bCInfDoubleCylinder * __thiscall __XbCInfDoubleCylinder__QAEAAV0_ABVbCMatrix___Z( bCInfDoubleCylinder *, bCMatrix const * );
// ??XbCInfDoubleCylinder@@QAEAAV0@M@Z public: bCInfDoubleCylinder & __thiscall bCInfDoubleCylinder::operator*=(float)
bCInfDoubleCylinder * __thiscall __XbCInfDoubleCylinder__QAEAAV0_M_Z( bCInfDoubleCylinder *, GEFloat );
// ??YbCInfDoubleCylinder@@QAEAAV0@ABVbCVector@@@Z public: bCInfDoubleCylinder & __thiscall bCInfDoubleCylinder::operator+=(bCVector const &)
bCInfDoubleCylinder * __thiscall __YbCInfDoubleCylinder__QAEAAV0_ABVbCVector___Z( bCInfDoubleCylinder *, bCVector const * );
// ??ZbCInfDoubleCylinder@@QAEAAV0@ABVbCVector@@@Z public: bCInfDoubleCylinder & __thiscall bCInfDoubleCylinder::operator-=(bCVector const &)
bCInfDoubleCylinder * __thiscall __ZbCInfDoubleCylinder__QAEAAV0_ABVbCVector___Z( bCInfDoubleCylinder *, bCVector const * );
// ??_0bCInfDoubleCylinder@@QAEAAV0@M@Z public: bCInfDoubleCylinder & __thiscall bCInfDoubleCylinder::operator/=(float)
bCInfDoubleCylinder * __thiscall ___0bCInfDoubleCylinder__QAEAAV0_M_Z( bCInfDoubleCylinder *, GEFloat );
// ??_4bCInfDoubleCylinder@@QAEAAV0@ABV0@@Z public: bCInfDoubleCylinder & __thiscall bCInfDoubleCylinder::operator&=(bCInfDoubleCylinder const &)
bCInfDoubleCylinder * __thiscall ___4bCInfDoubleCylinder__QAEAAV0_ABV0__Z( bCInfDoubleCylinder *, bCInfDoubleCylinder const * );
// ??_5bCInfDoubleCylinder@@QAEAAV0@ABV0@@Z public: bCInfDoubleCylinder & __thiscall bCInfDoubleCylinder::operator|=(bCInfDoubleCylinder const &)
bCInfDoubleCylinder * __thiscall ___5bCInfDoubleCylinder__QAEAAV0_ABV0__Z( bCInfDoubleCylinder *, bCInfDoubleCylinder const * );
// ??_5bCInfDoubleCylinder@@QAEAAV0@ABVbCVector@@@Z public: bCInfDoubleCylinder & __thiscall bCInfDoubleCylinder::operator|=(bCVector const &)
bCInfDoubleCylinder * __thiscall ___5bCInfDoubleCylinder__QAEAAV0_ABVbCVector___Z( bCInfDoubleCylinder *, bCVector const * );
// ?AccessPositionA@bCInfDoubleCylinder@@QAEAAVbCVector@@XZ public: bCVector & __thiscall bCInfDoubleCylinder::AccessPositionA(void)
bCVector * __thiscall _AccessPositionA_bCInfDoubleCylinder__QAEAAVbCVector__XZ( bCInfDoubleCylinder * );
// ?AccessPositionB@bCInfDoubleCylinder@@QAEAAVbCVector@@XZ public: bCVector & __thiscall bCInfDoubleCylinder::AccessPositionB(void)
bCVector * __thiscall _AccessPositionB_bCInfDoubleCylinder__QAEAAVbCVector__XZ( bCInfDoubleCylinder * );
// ?AccessRadiusA@bCInfDoubleCylinder@@QAEAAMXZ public: float & __thiscall bCInfDoubleCylinder::AccessRadiusA(void)
GEFloat * __thiscall _AccessRadiusA_bCInfDoubleCylinder__QAEAAMXZ( bCInfDoubleCylinder * );
// ?AccessRadiusB@bCInfDoubleCylinder@@QAEAAMXZ public: float & __thiscall bCInfDoubleCylinder::AccessRadiusB(void)
GEFloat * __thiscall _AccessRadiusB_bCInfDoubleCylinder__QAEAAMXZ( bCInfDoubleCylinder * );
// ?Contains@bCInfDoubleCylinder@@QBE_NABV1@@Z public: bool __thiscall bCInfDoubleCylinder::Contains(bCInfDoubleCylinder const &)const
GEBool __thiscall _Contains_bCInfDoubleCylinder__QBE_NABV1__Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder const * );
// ?Contains@bCInfDoubleCylinder@@QBE_NABVbCBox@@@Z public: bool __thiscall bCInfDoubleCylinder::Contains(bCBox const &)const
GEBool __thiscall _Contains_bCInfDoubleCylinder__QBE_NABVbCBox___Z( bCInfDoubleCylinder const *, bCBox const * );
// ?Contains@bCInfDoubleCylinder@@QBE_NABVbCFrustum@@@Z public: bool __thiscall bCInfDoubleCylinder::Contains(bCFrustum const &)const
GEBool __thiscall _Contains_bCInfDoubleCylinder__QBE_NABVbCFrustum___Z( bCInfDoubleCylinder const *, bCFrustum const * );
// ?Contains@bCInfDoubleCylinder@@QBE_NABVbCInfCylinder@@@Z public: bool __thiscall bCInfDoubleCylinder::Contains(bCInfCylinder const &)const
GEBool __thiscall _Contains_bCInfDoubleCylinder__QBE_NABVbCInfCylinder___Z( bCInfDoubleCylinder const *, bCInfCylinder const * );
// ?Contains@bCInfDoubleCylinder@@QBE_NABVbCStretch@@@Z public: bool __thiscall bCInfDoubleCylinder::Contains(bCStretch const &)const
GEBool __thiscall _Contains_bCInfDoubleCylinder__QBE_NABVbCStretch___Z( bCInfDoubleCylinder const *, bCStretch const * );
// ?Contains@bCInfDoubleCylinder@@QBE_NABVbCTriangle@@@Z public: bool __thiscall bCInfDoubleCylinder::Contains(bCTriangle const &)const
GEBool __thiscall _Contains_bCInfDoubleCylinder__QBE_NABVbCTriangle___Z( bCInfDoubleCylinder const *, bCTriangle const * );
// ?Contains@bCInfDoubleCylinder@@QBE_NABVbCUnitedRay@@@Z public: bool __thiscall bCInfDoubleCylinder::Contains(bCUnitedRay const &)const
GEBool __thiscall _Contains_bCInfDoubleCylinder__QBE_NABVbCUnitedRay___Z( bCInfDoubleCylinder const *, bCUnitedRay const * );
// ?Contains@bCInfDoubleCylinder@@QBE_NABVbCVector@@@Z public: bool __thiscall bCInfDoubleCylinder::Contains(bCVector const &)const
GEBool __thiscall _Contains_bCInfDoubleCylinder__QBE_NABVbCVector___Z( bCInfDoubleCylinder const *, bCVector const * );
// ?Contains@bCInfDoubleCylinder@@QBE_NQBVbCVector@@@Z public: bool __thiscall bCInfDoubleCylinder::Contains(bCVector const * const)const
GEBool __thiscall _Contains_bCInfDoubleCylinder__QBE_NQBVbCVector___Z( bCInfDoubleCylinder const *, bCVector const [ bCTriangle_bEVector_Count ] );
// ?Cull@bCInfDoubleCylinder@@QBE_NABV1@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCInfDoubleCylinder const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABV1__Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCBox@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCBox const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCBox___Z( bCInfDoubleCylinder const *, bCBox const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCFrustum@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCFrustum const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCFrustum___Z( bCInfDoubleCylinder const *, bCFrustum const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCInfCylinder@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCInfCylinder const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCInfCylinder___Z( bCInfDoubleCylinder const *, bCInfCylinder const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCLine@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCLine const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCLine___Z( bCInfDoubleCylinder const *, bCLine const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCPlane@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCPlane const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCPlane___Z( bCInfDoubleCylinder const *, bCPlane const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCRay@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCRay const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCRay___Z( bCInfDoubleCylinder const *, bCRay const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCSphere@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCSphere const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCSphere___Z( bCInfDoubleCylinder const *, bCSphere const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCStretch@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCStretch const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCStretch___Z( bCInfDoubleCylinder const *, bCStretch const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCTriangle@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCTriangle const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCTriangle___Z( bCInfDoubleCylinder const *, bCTriangle const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCUnitedRay@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCUnitedRay const &)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCUnitedRay___Z( bCInfDoubleCylinder const *, bCUnitedRay const * );
// ?Cull@bCInfDoubleCylinder@@QBE_NABVbCVector@@_NPAM@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCVector const &,bool,float *)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NABVbCVector___NPAM_Z( bCInfDoubleCylinder const *, bCVector const *, GEBool, GEFloat * );
// ?Cull@bCInfDoubleCylinder@@QBE_NQBVbCVector@@@Z public: bool __thiscall bCInfDoubleCylinder::Cull(bCVector const * const)const
GEBool __thiscall _Cull_bCInfDoubleCylinder__QBE_NQBVbCVector___Z( bCInfDoubleCylinder const *, bCVector const [ bCTriangle_bEVector_Count ] );
// ?GetIntersected@bCInfDoubleCylinder@@QBE?AV1@ABV1@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetIntersected(bCInfDoubleCylinder const &)const
bCInfDoubleCylinder * __thiscall _GetIntersected_bCInfDoubleCylinder__QBE_AV1_ABV1__Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCInfDoubleCylinder const * );
// ?GetIntersectionDistance@bCInfDoubleCylinder@@QBEMABVbCRay@@@Z public: float __thiscall bCInfDoubleCylinder::GetIntersectionDistance(bCRay const &)const
GEFloat __thiscall _GetIntersectionDistance_bCInfDoubleCylinder__QBEMABVbCRay___Z( bCInfDoubleCylinder const *, bCRay const * );
// ?GetInvScaled@bCInfDoubleCylinder@@QBE?AV1@M@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetInvScaled(float)const
bCInfDoubleCylinder * __thiscall _GetInvScaled_bCInfDoubleCylinder__QBE_AV1_M_Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, GEFloat );
// ?GetInvTranslated@bCInfDoubleCylinder@@QBE?AV1@ABVbCVector@@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetInvTranslated(bCVector const &)const
bCInfDoubleCylinder * __thiscall _GetInvTranslated_bCInfDoubleCylinder__QBE_AV1_ABVbCVector___Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCVector const * );
// ?GetInvTranslated@bCInfDoubleCylinder@@QBE?AV1@M@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetInvTranslated(float)const
bCInfDoubleCylinder * __thiscall _GetInvTranslated_bCInfDoubleCylinder__QBE_AV1_M_Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, GEFloat );
// ?GetMerged@bCInfDoubleCylinder@@QBE?AV1@ABV1@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetMerged(bCInfDoubleCylinder const &)const
bCInfDoubleCylinder * __thiscall _GetMerged_bCInfDoubleCylinder__QBE_AV1_ABV1__Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCInfDoubleCylinder const * );
// ?GetMerged@bCInfDoubleCylinder@@QBE?AV1@ABVbCVector@@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetMerged(bCVector const &)const
bCInfDoubleCylinder * __thiscall _GetMerged_bCInfDoubleCylinder__QBE_AV1_ABVbCVector___Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCVector const * );
// ?GetPositionA@bCInfDoubleCylinder@@QBEABVbCVector@@XZ public: bCVector const & __thiscall bCInfDoubleCylinder::GetPositionA(void)const
bCVector const * __thiscall _GetPositionA_bCInfDoubleCylinder__QBEABVbCVector__XZ( bCInfDoubleCylinder const * );
// ?GetPositionA@bCInfDoubleCylinder@@QBEXAAVbCVector@@@Z public: void __thiscall bCInfDoubleCylinder::GetPositionA(bCVector &)const
void __thiscall _GetPositionA_bCInfDoubleCylinder__QBEXAAVbCVector___Z( bCInfDoubleCylinder const *, bCVector * );
// ?GetPositionB@bCInfDoubleCylinder@@QBEABVbCVector@@XZ public: bCVector const & __thiscall bCInfDoubleCylinder::GetPositionB(void)const
bCVector const * __thiscall _GetPositionB_bCInfDoubleCylinder__QBEABVbCVector__XZ( bCInfDoubleCylinder const * );
// ?GetPositionB@bCInfDoubleCylinder@@QBEXAAVbCVector@@@Z public: void __thiscall bCInfDoubleCylinder::GetPositionB(bCVector &)const
void __thiscall _GetPositionB_bCInfDoubleCylinder__QBEXAAVbCVector___Z( bCInfDoubleCylinder const *, bCVector * );
// ?GetRadiusA@bCInfDoubleCylinder@@QBEMXZ public: float __thiscall bCInfDoubleCylinder::GetRadiusA(void)const
GEFloat __thiscall _GetRadiusA_bCInfDoubleCylinder__QBEMXZ( bCInfDoubleCylinder const * );
// ?GetRadiusA@bCInfDoubleCylinder@@QBEXAAM@Z public: void __thiscall bCInfDoubleCylinder::GetRadiusA(float &)const
void __thiscall _GetRadiusA_bCInfDoubleCylinder__QBEXAAM_Z( bCInfDoubleCylinder const *, GEFloat * );
// ?GetRadiusB@bCInfDoubleCylinder@@QBEMXZ public: float __thiscall bCInfDoubleCylinder::GetRadiusB(void)const
GEFloat __thiscall _GetRadiusB_bCInfDoubleCylinder__QBEMXZ( bCInfDoubleCylinder const * );
// ?GetRadiusB@bCInfDoubleCylinder@@QBEXAAM@Z public: void __thiscall bCInfDoubleCylinder::GetRadiusB(float &)const
void __thiscall _GetRadiusB_bCInfDoubleCylinder__QBEXAAM_Z( bCInfDoubleCylinder const *, GEFloat * );
// ?GetScaled@bCInfDoubleCylinder@@QBE?AV1@M@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetScaled(float)const
bCInfDoubleCylinder * __thiscall _GetScaled_bCInfDoubleCylinder__QBE_AV1_M_Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, GEFloat );
// ?GetShrunk@bCInfDoubleCylinder@@QBE?AV1@M@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetShrunk(float)const
bCInfDoubleCylinder * __thiscall _GetShrunk_bCInfDoubleCylinder__QBE_AV1_M_Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, GEFloat );
// ?GetTransformed@bCInfDoubleCylinder@@QBE?AV1@ABVbCMatrix3@@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetTransformed(bCMatrix3 const &)const
bCInfDoubleCylinder * __thiscall _GetTransformed_bCInfDoubleCylinder__QBE_AV1_ABVbCMatrix3___Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCMatrix3 const * );
// ?GetTransformed@bCInfDoubleCylinder@@QBE?AV1@ABVbCMatrix@@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetTransformed(bCMatrix const &)const
bCInfDoubleCylinder * __thiscall _GetTransformed_bCInfDoubleCylinder__QBE_AV1_ABVbCMatrix___Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCMatrix const * );
// ?GetTranslated@bCInfDoubleCylinder@@QBE?AV1@ABVbCVector@@@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetTranslated(bCVector const &)const
bCInfDoubleCylinder * __thiscall _GetTranslated_bCInfDoubleCylinder__QBE_AV1_ABVbCVector___Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, bCVector const * );
// ?GetTranslated@bCInfDoubleCylinder@@QBE?AV1@M@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetTranslated(float)const
bCInfDoubleCylinder * __thiscall _GetTranslated_bCInfDoubleCylinder__QBE_AV1_M_Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, GEFloat );
// ?GetVolume@bCInfDoubleCylinder@@QBEMXZ public: float __thiscall bCInfDoubleCylinder::GetVolume(void)const
GEFloat __thiscall _GetVolume_bCInfDoubleCylinder__QBEMXZ( bCInfDoubleCylinder const * );
// ?GetWidened@bCInfDoubleCylinder@@QBE?AV1@M@Z public: bCInfDoubleCylinder __thiscall bCInfDoubleCylinder::GetWidened(float)const
bCInfDoubleCylinder * __thiscall _GetWidened_bCInfDoubleCylinder__QBE_AV1_M_Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder *, GEFloat );
// ?Intersect@bCInfDoubleCylinder@@QAEXABV1@@Z public: void __thiscall bCInfDoubleCylinder::Intersect(bCInfDoubleCylinder const &)
void __thiscall _Intersect_bCInfDoubleCylinder__QAEXABV1__Z( bCInfDoubleCylinder *, bCInfDoubleCylinder const * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABV1@@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCInfDoubleCylinder const &)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABV1__Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder const * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABVbCBox@@@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCBox const &)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABVbCBox___Z( bCInfDoubleCylinder const *, bCBox const * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABVbCFrustum@@@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCFrustum const &)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABVbCFrustum___Z( bCInfDoubleCylinder const *, bCFrustum const * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABVbCInfCylinder@@@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCInfCylinder const &)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABVbCInfCylinder___Z( bCInfDoubleCylinder const *, bCInfCylinder const * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABVbCLine@@AAM@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCLine const &,float &)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABVbCLine__AAM_Z( bCInfDoubleCylinder const *, bCLine const *, GEFloat * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABVbCPlane@@@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCPlane const &)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABVbCPlane___Z( bCInfDoubleCylinder const *, bCPlane const * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABVbCRay@@AAM@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCRay const &,float &)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABVbCRay__AAM_Z( bCInfDoubleCylinder const *, bCRay const *, GEFloat * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABVbCStretch@@AAMAAVbCVector2@@_N3@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCStretch const &,float &,bCVector2 &,bool,bool)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABVbCStretch__AAMAAVbCVector2___N3_Z( bCInfDoubleCylinder const *, bCStretch const *, GEFloat *, bCVector2 *, GEBool, GEBool );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABVbCTriangle@@@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCTriangle const &)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABVbCTriangle___Z( bCInfDoubleCylinder const *, bCTriangle const * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABVbCUnitedRay@@AAM@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCUnitedRay const &,float &)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABVbCUnitedRay__AAM_Z( bCInfDoubleCylinder const *, bCUnitedRay const *, GEFloat * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NABVbCVector@@@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCVector const &)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NABVbCVector___Z( bCInfDoubleCylinder const *, bCVector const * );
// ?Intersects@bCInfDoubleCylinder@@QBE_NQBVbCVector@@@Z public: bool __thiscall bCInfDoubleCylinder::Intersects(bCVector const * const)const
GEBool __thiscall _Intersects_bCInfDoubleCylinder__QBE_NQBVbCVector___Z( bCInfDoubleCylinder const *, bCVector const [ bCTriangle_bEVector_Count ] );
// ?InvScale@bCInfDoubleCylinder@@QAEXM@Z public: void __thiscall bCInfDoubleCylinder::InvScale(float)
void __thiscall _InvScale_bCInfDoubleCylinder__QAEXM_Z( bCInfDoubleCylinder *, GEFloat );
// ?InvTranslate@bCInfDoubleCylinder@@QAEXABVbCVector@@@Z public: void __thiscall bCInfDoubleCylinder::InvTranslate(bCVector const &)
void __thiscall _InvTranslate_bCInfDoubleCylinder__QAEXABVbCVector___Z( bCInfDoubleCylinder *, bCVector const * );
// ?InvTranslate@bCInfDoubleCylinder@@QAEXM@Z public: void __thiscall bCInfDoubleCylinder::InvTranslate(float)
void __thiscall _InvTranslate_bCInfDoubleCylinder__QAEXM_Z( bCInfDoubleCylinder *, GEFloat );
// ?Invalidate@bCInfDoubleCylinder@@QAEXXZ public: void __thiscall bCInfDoubleCylinder::Invalidate(void)
void __thiscall _Invalidate_bCInfDoubleCylinder__QAEXXZ( bCInfDoubleCylinder * );
// ?IsEqual@bCInfDoubleCylinder@@QBE_NABV1@@Z public: bool __thiscall bCInfDoubleCylinder::IsEqual(bCInfDoubleCylinder const &)const
GEBool __thiscall _IsEqual_bCInfDoubleCylinder__QBE_NABV1__Z( bCInfDoubleCylinder const *, bCInfDoubleCylinder const * );
// ?IsValid@bCInfDoubleCylinder@@QBE_NXZ public: bool __thiscall bCInfDoubleCylinder::IsValid(void)const
GEBool __thiscall _IsValid_bCInfDoubleCylinder__QBE_NXZ( bCInfDoubleCylinder const * );
// ?Merge@bCInfDoubleCylinder@@QAEXABV1@@Z public: void __thiscall bCInfDoubleCylinder::Merge(bCInfDoubleCylinder const &)
void __thiscall _Merge_bCInfDoubleCylinder__QAEXABV1__Z( bCInfDoubleCylinder *, bCInfDoubleCylinder const * );
// ?Merge@bCInfDoubleCylinder@@QAEXABVbCVector@@@Z public: void __thiscall bCInfDoubleCylinder::Merge(bCVector const &)
void __thiscall _Merge_bCInfDoubleCylinder__QAEXABVbCVector___Z( bCInfDoubleCylinder *, bCVector const * );
// ?Scale@bCInfDoubleCylinder@@QAEXM@Z public: void __thiscall bCInfDoubleCylinder::Scale(float)
void __thiscall _Scale_bCInfDoubleCylinder__QAEXM_Z( bCInfDoubleCylinder *, GEFloat );
// ?Separates@bCInfDoubleCylinder@@QBE_NABVbCBox@@ABVbCVector@@@Z public: bool __thiscall bCInfDoubleCylinder::Separates(bCBox const &,bCVector const &)const
GEBool __thiscall _Separates_bCInfDoubleCylinder__QBE_NABVbCBox__ABVbCVector___Z( bCInfDoubleCylinder const *, bCBox const *, bCVector const * );
// ?Separates@bCInfDoubleCylinder@@QBE_NPBVbCVector@@HABV2@@Z public: bool __thiscall bCInfDoubleCylinder::Separates(bCVector const *,int,bCVector const &)const
GEBool __thiscall _Separates_bCInfDoubleCylinder__QBE_NPBVbCVector__HABV2__Z( bCInfDoubleCylinder const *, bCVector const *, GEInt, bCVector const * );
// ?SetInfDoubleCylinder@bCInfDoubleCylinder@@QAEXABV1@@Z public: void __thiscall bCInfDoubleCylinder::SetInfDoubleCylinder(bCInfDoubleCylinder const &)
void __thiscall _SetInfDoubleCylinder_bCInfDoubleCylinder__QAEXABV1__Z( bCInfDoubleCylinder *, bCInfDoubleCylinder const * );
// ?SetInfDoubleCylinder@bCInfDoubleCylinder@@QAEXABVbCVector@@M0M@Z public: void __thiscall bCInfDoubleCylinder::SetInfDoubleCylinder(bCVector const &,float,bCVector const &,float)
void __thiscall _SetInfDoubleCylinder_bCInfDoubleCylinder__QAEXABVbCVector__M0M_Z( bCInfDoubleCylinder *, bCVector const *, GEFloat, bCVector const *, GEFloat );
// ?SetPositionA@bCInfDoubleCylinder@@QAEXABVbCVector@@@Z public: void __thiscall bCInfDoubleCylinder::SetPositionA(bCVector const &)
void __thiscall _SetPositionA_bCInfDoubleCylinder__QAEXABVbCVector___Z( bCInfDoubleCylinder *, bCVector const * );
// ?SetPositionB@bCInfDoubleCylinder@@QAEXABVbCVector@@@Z public: void __thiscall bCInfDoubleCylinder::SetPositionB(bCVector const &)
void __thiscall _SetPositionB_bCInfDoubleCylinder__QAEXABVbCVector___Z( bCInfDoubleCylinder *, bCVector const * );
// ?SetRadiusA@bCInfDoubleCylinder@@QAEXM@Z public: void __thiscall bCInfDoubleCylinder::SetRadiusA(float)
void __thiscall _SetRadiusA_bCInfDoubleCylinder__QAEXM_Z( bCInfDoubleCylinder *, GEFloat );
// ?SetRadiusB@bCInfDoubleCylinder@@QAEXM@Z public: void __thiscall bCInfDoubleCylinder::SetRadiusB(float)
void __thiscall _SetRadiusB_bCInfDoubleCylinder__QAEXM_Z( bCInfDoubleCylinder *, GEFloat );
// ?Shrink@bCInfDoubleCylinder@@QAEXM@Z public: void __thiscall bCInfDoubleCylinder::Shrink(float)
void __thiscall _Shrink_bCInfDoubleCylinder__QAEXM_Z( bCInfDoubleCylinder *, GEFloat );
// ?Transform@bCInfDoubleCylinder@@QAEXABVbCMatrix3@@@Z public: void __thiscall bCInfDoubleCylinder::Transform(bCMatrix3 const &)
void __thiscall _Transform_bCInfDoubleCylinder__QAEXABVbCMatrix3___Z( bCInfDoubleCylinder *, bCMatrix3 const * );
// ?Transform@bCInfDoubleCylinder@@QAEXABVbCMatrix@@@Z public: void __thiscall bCInfDoubleCylinder::Transform(bCMatrix const &)
void __thiscall _Transform_bCInfDoubleCylinder__QAEXABVbCMatrix___Z( bCInfDoubleCylinder *, bCMatrix const * );
// ?Translate@bCInfDoubleCylinder@@QAEXABVbCVector@@@Z public: void __thiscall bCInfDoubleCylinder::Translate(bCVector const &)
void __thiscall _Translate_bCInfDoubleCylinder__QAEXABVbCVector___Z( bCInfDoubleCylinder *, bCVector const * );
// ?Translate@bCInfDoubleCylinder@@QAEXM@Z public: void __thiscall bCInfDoubleCylinder::Translate(float)
void __thiscall _Translate_bCInfDoubleCylinder__QAEXM_Z( bCInfDoubleCylinder *, GEFloat );
// ?Widen@bCInfDoubleCylinder@@QAEXM@Z public: void __thiscall bCInfDoubleCylinder::Widen(float)
void __thiscall _Widen_bCInfDoubleCylinder__QAEXM_Z( bCInfDoubleCylinder *, GEFloat );
// ?m_bDummy@bCInfDoubleCylinder@@1_NA protected: static bool bCInfDoubleCylinder::m_bDummy
GEBool DLLIMPORT _m_bDummy_bCInfDoubleCylinder__1_NA;
// ?m_fDummy@bCInfDoubleCylinder@@1MA protected: static float bCInfDoubleCylinder::m_fDummy
GEFloat DLLIMPORT _m_fDummy_bCInfDoubleCylinder__1MA;
// ?m_vecDummy@bCInfDoubleCylinder@@1VbCVector2@@A protected: static bCVector2 bCInfDoubleCylinder::m_vecDummy
bCVector2 DLLIMPORT _m_vecDummy_bCInfDoubleCylinder__1VbCVector2__A;
