struct bCObjectBase;

struct bCPropertyConverter;
struct bCPropertyConverter_vftable
{
    GEU32                    (__thiscall * AddReference)( bCPropertyConverter * );
    GEU32                    (__thiscall * ReleaseReference)( bCPropertyConverter * );
    bCString const *         (__thiscall * GetPropertyName)( bCPropertyConverter const * );
    GELPCChar                (__thiscall * GetClassName)( bCPropertyConverter const * );
    GELPCChar                (__thiscall * GetValueTypeName)( bCPropertyConverter const * );
    bCString *               (__thiscall * GetPropertyCategory)( bCPropertyConverter const *, bCString * );
    bCString *               (__thiscall * GetPropertyDescription)( bCPropertyConverter const *, bCString * );
    GEBool                   (__thiscall * IsReadOnly)( bCPropertyConverter const * );
    GEBool                   (__thiscall * IsPatchable)( bCPropertyConverter const * );
    GEBool                   (__thiscall * ConvertStringToValue)( bCPropertyConverter *, bCString const * );
    GEBool                   (__thiscall * ConvertValueToString)( bCPropertyConverter *, bCString * );
    GEBool                   (__thiscall * IsEnum)( bCPropertyConverter const * );
    void                     (__thiscall * GetEnumNames)( bCPropertyConverter *, bTObjArray_bCString * );
    GEInt                    (__thiscall * GetElementCount)( bCPropertyConverter * );
    bCPropertyConverterPtr * (__thiscall * GetElement)( bCPropertyConverter *, bCPropertyConverterPtr *, GEInt );
    GEBool                   (__thiscall * CopyFrom)( bCPropertyConverter *, bCPropertyConverterPtr );
    GEBool                   (__thiscall * IsEqual)( bCPropertyConverter *, bCPropertyConverterPtr );
    GEBool                   (__thiscall * IsArrayElement)( bCPropertyConverter * );
    GEBool                   (__thiscall * IsArray)( bCPropertyConverter * );
    GEBool                   (__thiscall * IsNonArray)( bCPropertyConverter * );
    bCPropertyConverterPtr * (__thiscall * GetArray)( bCPropertyConverter *, bCPropertyConverterPtr * );
    GEBool                   (__thiscall * AddElement)( bCPropertyConverter *, bCPropertyConverterPtr );
    GEBool                   (__thiscall * Contains)( bCPropertyConverter *, bCPropertyConverterPtr );
    bCObjectBase *           (__thiscall * GetPropertyClass)( bCPropertyConverter * );
    void                     (__thiscall * __delDtor)( bCPropertyConverter *, unsigned int );
};
struct bCPropertyConverter_data
{
    GEU32 m_u32ReferenceCount;
};
struct bCPropertyConverter
{
    bCPropertyConverter_vftable const * __vfptr;
    bCPropertyConverter_data            data;
};
// ??0bCPropertyConverter@@QAE@ABV0@@Z public: __thiscall bCPropertyConverter::bCPropertyConverter(bCPropertyConverter const &)
bCPropertyConverter * __thiscall __0bCPropertyConverter__QAE_ABV0__Z( bCPropertyConverter *, bCPropertyConverter const * );
// ??0bCPropertyConverter@@QAE@XZ public: __thiscall bCPropertyConverter::bCPropertyConverter(void)
bCPropertyConverter * __thiscall __0bCPropertyConverter__QAE_XZ( bCPropertyConverter * );
// ??1bCPropertyConverter@@UAE@XZ public: virtual __thiscall bCPropertyConverter::~bCPropertyConverter(void)
void __thiscall __1bCPropertyConverter__UAE_XZ( bCPropertyConverter * );
// ??4bCPropertyConverter@@QAEAAV0@ABV0@@Z public: bCPropertyConverter & __thiscall bCPropertyConverter::operator=(bCPropertyConverter const &)
bCPropertyConverter * __thiscall __4bCPropertyConverter__QAEAAV0_ABV0__Z( bCPropertyConverter *, bCPropertyConverter const * );
// ??_7bCPropertyConverter@@6B@ const bCPropertyConverter::`vftable'
bCPropertyConverter_vftable const DLLIMPORT ___7bCPropertyConverter__6B_;
// ?AddReference@bCPropertyConverter@@UAEKXZ public: virtual unsigned long __thiscall bCPropertyConverter::AddReference(void)
GEU32 __thiscall _AddReference_bCPropertyConverter__UAEKXZ( bCPropertyConverter * );
// ?ReleaseReference@bCPropertyConverter@@UAEKXZ public: virtual unsigned long __thiscall bCPropertyConverter::ReleaseReference(void)
GEU32 __thiscall _ReleaseReference_bCPropertyConverter__UAEKXZ( bCPropertyConverter * );
